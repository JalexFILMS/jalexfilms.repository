<?xml version='1.0' encoding='UTF-8'?>
<includes>
	<include name="skinshortcuts-mainmenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<label>Peliculas</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fUsers%2fJalexFILMS%2fLibrary%2fApplication%20Support%2fKodi%2faddons%2fscript.flixnet.artwork%2fresources%2fmedia%2fexuary%2flanguages.png/</thumb>
			<property name="labelID">peliculas</property>
			<property name="defaultID" />
			<property name="widget">Addon</property>
			<property name="widgetName">Peliculas en español</property>
			<property name="widgetType">movies</property>
			<property name="widgetPath">plugin://plugin.video.flixnet/?action=moviePage&amp;url=http%3A%2F%2Fwww.imdb.com%2Fsearch%2Ftitle%3Ftitle_type%3Dfeature%2Ctv_movie%26num_votes%3D100%2C%26production_status%3Dreleased%26primary_language%3Des%26sort%3Dmoviemeter%2Casc%26count%3D40%26start%3D1%26page%3D2%26ref_%3Dadv_nxt&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32039]</property>
			<property name="widget.1">Addon</property>
			<property name="widgetTarget.1">videos</property>
			<property name="widgetType.1">movies</property>
			<property name="widgetPath.1">plugin://plugin.video.genesisreborn/?action=movieWidget&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.1">Top Peliculas en ingles</property>
			<property name="widget.99">randommovies</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">movies</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.99">Spotlight</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.flixnet/?action=movies&amp;url=http%3A%2F%2Fwww.imdb.com%2Fsearch%2Ftitle%3Ftitle_type%3Dfeature%2Ctv_movie%26num_votes%3D100%2C%26production_status%3Dreleased%26primary_language%3Des%26sort%3Dmoviemeter%2Casc%26count%3D40%26start%3D1",return)</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large Netflix</property>
			<property name="widgetstyleName">Landscape Large Netflix</property>
			<property name="widgetName.name">Peliculas en español</property>
			<property name="widgetNameName">Peliculas en español</property>
			<property name="widgetstyle.1">landscapelarge</property>
			<property name="widgetstyle.1.name">Landscape Large Netflix</property>
			<property name="widgetstyle.1Name">Landscape Large Netflix</property>
			<property name="widgetName.1.name">Top Peliculas en ingles</property>
			<property name="widgetName.1Name">Top Peliculas en ingles</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,"plugin://plugin.video.flixnet/?action=movies&amp;url=http%3A%2F%2Fwww.imdb.com%2Fsearch%2Ftitle%3Ftitle_type%3Dfeature%2Ctv_movie%26num_votes%3D100%2C%26production_status%3Dreleased%26primary_language%3Des%26sort%3Dmoviemeter%2Casc%26count%3D40%26start%3D1",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.flixnet/?action=movies&amp;url=http%3A%2F%2Fwww.imdb.com%2Fsearch%2Ftitle%3Ftitle_type%3Dfeature%2Ctv_movie%26num_votes%3D100%2C%26production_status%3Dreleased%26primary_language%3Des%26sort%3Dmoviemeter%2Casc%26count%3D40%26start%3D1",return)</property>
			<property name="list">plugin://plugin.video.flixnet/?action=movies&amp;url=http%3A%2F%2Fwww.imdb.com%2Fsearch%2Ftitle%3Ftitle_type%3Dfeature%2Ctv_movie%26num_votes%3D100%2C%26production_status%3Dreleased%26primary_language%3Des%26sort%3Dmoviemeter%2Casc%26count%3D40%26start%3D1</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">peliculas</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<label>Series</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fUsers%2fJalexFILMS%2fLibrary%2fApplication%20Support%2fKodi%2faddons%2fplugin.video.series%2fresources%2fmedia%2f%2fseries.jpg/</thumb>
			<property name="labelID">series</property>
			<property name="defaultID" />
			<property name="widget">Addon</property>
			<property name="widgetName">Series</property>
			<property name="widgetType">videos</property>
			<property name="widgetPath">plugin://plugin.video.series/?action=series&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetTarget">videos</property>
			<property name="background">$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</property>
			<property name="backgroundName">$ADDON[script.skin.helper.service 32043]</property>
			<property name="widget.99">randomtvshows</property>
			<property name="widgetTarget.99">videos</property>
			<property name="widgetType.99">tvshows</property>
			<property name="widgetPath.99">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.99">Spotlight</property>
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.series/?action=series",return)</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large Netflix</property>
			<property name="widgetstyleName">Landscape Large Netflix</property>
			<property name="widgetName.name">Series</property>
			<property name="widgetNameName">Series</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,"plugin://plugin.video.series/?action=series",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.series/?action=series",return)</property>
			<property name="list">plugin://plugin.video.series/?action=series</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">series</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<label>Live TV</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://http%3a%2f%2fadryanlist.org%2fadryan%2fimg%2ftp.jpg/</thumb>
			<property name="labelID">livetv</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.adryanlist/?url=http%3A%2F%2Fadryanlist.org%2Fadryan%2Ftotalp.xml&amp;mode=1&amp;name=%5BCOLOR+lime%5D%E2%80%A2%5B%2FCOLOR%5D%5BCOLOR+deepskyblue%5D++TotalPlay+%5B%2FCOLOR%5D+%5BCOLOR+lightgreen%5D+%5B%2FCOLOR%5D++&amp;fanart=http%3A%2F%2Fadryanlist.org%2Fadryan%2Fimg%2Ffanart.jpg",return)</property>
			<property name="widget">Addon</property>
			<property name="widgetName">Total Play</property>
			<property name="widgetType">videos</property>
			<property name="widgetTarget">videos</property>
			<property name="widgetPath">plugin://plugin.video.adryanlist/?url=http%3A%2F%2Fadryanlist.org%2Fadryan%2Ftotalp.xml&amp;mode=1&amp;name=%5BCOLOR+lime%5D%E2%80%A2%5B%2FCOLOR%5D%5BCOLOR+deepskyblue%5D++TotalPlay+%5B%2FCOLOR%5D+%5BCOLOR+lightgreen%5D+%5B%2FCOLOR%5D++&amp;fanart=http%3A%2F%2Fadryanlist.org%2Fadryan%2Fimg%2Ffanart.jpg&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.name">Total Play</property>
			<property name="widgetNameName">Total Play</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large Netflix</property>
			<property name="widgetstyleName">Landscape Large Netflix</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Videos,"plugin://plugin.video.adryanlist/?url=http%3A%2F%2Fadryanlist.org%2Fadryan%2Ftotalp.xml&amp;mode=1&amp;name=%5BCOLOR+lime%5D%E2%80%A2%5B%2FCOLOR%5D%5BCOLOR+deepskyblue%5D++TotalPlay+%5B%2FCOLOR%5D+%5BCOLOR+lightgreen%5D+%5B%2FCOLOR%5D++&amp;fanart=http%3A%2F%2Fadryanlist.org%2Fadryan%2Fimg%2Ffanart.jpg",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.adryanlist/?url=http%3A%2F%2Fadryanlist.org%2Fadryan%2Ftotalp.xml&amp;mode=1&amp;name=%5BCOLOR+lime%5D%E2%80%A2%5B%2FCOLOR%5D%5BCOLOR+deepskyblue%5D++TotalPlay+%5B%2FCOLOR%5D+%5BCOLOR+lightgreen%5D+%5B%2FCOLOR%5D++&amp;fanart=http%3A%2F%2Fadryanlist.org%2Fadryan%2Fimg%2Ffanart.jpg",return)</property>
			<property name="list">plugin://plugin.video.adryanlist/?url=http%3A%2F%2Fadryanlist.org%2Fadryan%2Ftotalp.xml&amp;mode=1&amp;name=%5BCOLOR+lime%5D%E2%80%A2%5B%2FCOLOR%5D%5BCOLOR+deepskyblue%5D++TotalPlay+%5B%2FCOLOR%5D+%5BCOLOR+lightgreen%5D+%5B%2FCOLOR%5D++&amp;fanart=http%3A%2F%2Fadryanlist.org%2Fadryan%2Fimg%2Ffanart.jpg</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">livetv</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<label>NetFlix</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://https%3a%2f%2fimagenes.es.sftcdn.net%2fes%2fscrn%2f6650000%2f6650254%2fnetflix-06-536x535.png/</thumb>
			<property name="labelID">netflix</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Programs,"plugin://plugin.program.chrome.launcher/?url=http%3A%2F%2Fwww.netflix.com&amp;mode=showSite&amp;stopPlayback=yes&amp;kiosk=yes",return)</property>
			<property name="widget">Addon</property>
			<property name="widgetName">Streamin</property>
			<property name="widgetType">program</property>
			<property name="widgetTarget">programs</property>
			<property name="widgetPath">plugin://plugin.program.chrome.launcher?reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large Netflix</property>
			<property name="widgetstyleName">Landscape Large Netflix</property>
			<property name="widgetName.name">Streamin</property>
			<property name="widgetNameName">Streamin</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Programs,"plugin://plugin.program.chrome.launcher/?url=http%3A%2F%2Fwww.netflix.com&amp;mode=showSite&amp;stopPlayback=yes&amp;kiosk=yes",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.program.chrome.launcher/?url=http%3A%2F%2Fwww.netflix.com&amp;mode=showSite&amp;stopPlayback=yes&amp;kiosk=yes",return)</property>
			<property name="list">plugin://plugin.program.chrome.launcher/?url=http%3A%2F%2Fwww.netflix.com&amp;mode=showSite&amp;stopPlayback=yes&amp;kiosk=yes</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">netflix</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<label>$LOCALIZE[12600]</label>
			<label2>Clima</label2>
			<icon>resource://resource.images.skinicons.wide/weather.png</icon>
			<thumb>$VAR[WeatherFanArtSingleImage_Current]</thumb>
			<property name="labelID">weather</property>
			<property name="defaultID">weather</property>
			<property name="widget">weather</property>
			<property name="widgetName">$LOCALIZE[8]</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[WeatherWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">$INFO[Skin.String(WeatherFanArtPack.path)]$INFO[Window(Weather).Property(Current.FanartCode)]$VAR[WeatherFanArtExtension]</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large Netflix</property>
			<property name="widgetstyleName">Landscape Large Netflix</property>
			<visible>!String.IsEmpty(Weather.Plugin)</visible>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Weather)</onclick>
			<property name="path">ActivateWindow(Weather)</property>
			<property name="list">Weather</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">weather</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="6">
			<property name="id">$NUMBER[6]</property>
			<label>$LOCALIZE[31062]</label>
			<label2>youtube</label2>
			<icon>resource://resource.images.skinicons.wide/youtube.png</icon>
			<thumb />
			<property name="labelID">plugin.video.youtube</property>
			<property name="defaultID">plugin.video.youtube</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/hover_extensions.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(10025,plugin://plugin.video.youtube,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://plugin.video.youtube,return)</property>
			<property name="list">plugin://plugin.video.youtube</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">plugin-video-youtube</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="7">
			<property name="id">$NUMBER[7]</property>
			<label>$LOCALIZE[10134]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/favourites.png</icon>
			<thumb />
			<property name="labelID">10134</property>
			<property name="defaultID">10134</property>
			<property name="translatedPath">ActivateWindow(favourites)</property>
			<property name="multiwidget">multi</property>
			<property name="multiwidget.name">Multiple widgets</property>
			<property name="multiwidgetName">Multiple widgets</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(favourites)</onclick>
			<property name="path">ActivateWindow(favourites)</property>
			<property name="list">favourites</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10134</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="8">
			<property name="id">$NUMBER[8]</property>
			<label>Elimina Cache</label>
			<label2>Program</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://http%3a%2f%2fxtyrepo.me%2fxunitytalk%2fmaintenance_do_not_touch%2fhubmaintenance%2fxunity_images%2fmaintenance.jpg/</thumb>
			<property name="labelID">eliminacache</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Programs,"plugin://plugin.video.hubmaintenance/?url=url&amp;mode=9&amp;name=Maintenance&amp;iconimage=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Fmaintenance.jpg&amp;fanart=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Ffanart%2Fbeginners.jpg&amp;description=Safely+delete+all+cache+from+plugins&amp;special=",return)</property>
			<property name="widget">Addon</property>
			<property name="widgetName">Cache</property>
			<property name="widgetType">program</property>
			<property name="widgetTarget">programs</property>
			<property name="widgetPath">plugin://plugin.video.hubmaintenance/?url=url&amp;mode=9&amp;name=Maintenance&amp;iconimage=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Fmaintenance.jpg&amp;fanart=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Ffanart%2Fbeginners.jpg&amp;description=Safely+delete+all+cache+from+plugins&amp;special=&amp;reload=$INFO[Window(Home).Property(widgetreload)]</property>
			<property name="widgetName.name">Cache</property>
			<property name="widgetNameName">Cache</property>
			<property name="widgetstyle">landscapelarge</property>
			<property name="widgetstyle.name">Landscape Large Netflix</property>
			<property name="widgetstyleName">Landscape Large Netflix</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Programs,"plugin://plugin.video.hubmaintenance/?url=url&amp;mode=9&amp;name=Maintenance&amp;iconimage=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Fmaintenance.jpg&amp;fanart=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Ffanart%2Fbeginners.jpg&amp;description=Safely+delete+all+cache+from+plugins&amp;special=",return)</onclick>
			<property name="path">ActivateWindow(Programs,"plugin://plugin.video.hubmaintenance/?url=url&amp;mode=9&amp;name=Maintenance&amp;iconimage=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Fmaintenance.jpg&amp;fanart=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Ffanart%2Fbeginners.jpg&amp;description=Safely+delete+all+cache+from+plugins&amp;special=",return)</property>
			<property name="list">plugin://plugin.video.hubmaintenance/?url=url&amp;mode=9&amp;name=Maintenance&amp;iconimage=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Fmaintenance.jpg&amp;fanart=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Ffanart%2Fbeginners.jpg&amp;description=Safely+delete+all+cache+from+plugins&amp;special=</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">eliminacache</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">False</property>
		</item>
		<item id="9">
			<property name="id">$NUMBER[9]</property>
			<label>$LOCALIZE[10040]</label>
			<label2>Buscar complemento</label2>
			<icon>resource://resource.images.skinicons.wide/addons.png</icon>
			<thumb />
			<property name="labelID">10040</property>
			<property name="defaultID">10040</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/programs.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">num-10040</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
		<item id="10">
			<property name="id">$NUMBER[10]</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Configuración</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">settings</property>
			<property name="widget">systeminfo</property>
			<property name="widgetName">$LOCALIZE[130]</property>
			<property name="widgetType">static</property>
			<property name="widgetPath">$INCLUDE[SystemInfoWidget]</property>
			<property name="widgetTarget">static</property>
			<property name="background">resource://resource.images.skinbackgrounds.titanium/systeminfo.jpg</property>
			<property name="backgroundName">571</property>
			<onclick condition="![Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0) + ![SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]]">ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<onclick condition="[Skin.HasSetting(OpenSubMenuOnClick) + IntegerGreaterThan(Container(4445).NumItems,0)] | [SubString(Skin.String(HomeLayout), netflix) | SubString(Skin.String(HomeLayout), win10)]">SetFocus(4444,0)</onclick>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="submenuVisibility">settings</property>
			<property name="group">mainmenu</property>
			<property name="hasSubmenu">True</property>
		</item>
	</include>
	<include />
	<include name="skinshortcuts-submenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),peliculas)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>Peliculas nuevas</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fUsers%2fJalexFILMS%2fLibrary%2fApplication%20Support%2fKodi%2faddons%2fscript.genesisreborn.artwork%2fresources%2fmedia%2fgenesisreborn%2ftrending.png/</thumb>
			<property name="labelID">peliculasnuevas</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</property>
			<property name="list">plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),peliculas)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),peliculas)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),peliculas)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),peliculas)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),series)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick>ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</property>
			<property name="list">library://video/recentlyaddedepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),series)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),series)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),series)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Container(300).ListItem.Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-peliculas">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>Peliculas nuevas</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fUsers%2fJalexFILMS%2fLibrary%2fApplication%20Support%2fKodi%2faddons%2fscript.genesisreborn.artwork%2fresources%2fmedia%2fgenesisreborn%2ftrending.png/</thumb>
			<property name="labelID">peliculasnuevas</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</property>
			<property name="list">plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(Movies)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-peliculas">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[31050]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31050</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),peliculas)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/titles/,return)</property>
			<property name="list">videodb://movies/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">1</property>
			<label>Peliculas nuevas</label>
			<label2>Video Add-On</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb>image://%2fUsers%2fJalexFILMS%2fLibrary%2fApplication%20Support%2fKodi%2faddons%2fscript.genesisreborn.artwork%2fresources%2fmedia%2fgenesisreborn%2ftrending.png/</thumb>
			<property name="labelID">peliculasnuevas</property>
			<property name="defaultID" />
			<property name="translatedPath">ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</property>
			<onclick>ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</onclick>
			<property name="path">ActivateWindow(Videos,"plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere",return)</property>
			<property name="list">plugin://plugin.video.genesisreborn/?action=movies&amp;url=premiere</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),peliculas)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[135]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(Movies)] + String.IsEqual(Window(10000).Property(submenuVisibility),peliculas)</visible>
			<onclick>ActivateWindow(10025,videodb://movies/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://movies/genres/,return)</property>
			<property name="list">videodb://movies/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[31035]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">31035</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=inprogress&amp;mediatype=movies&amp;limit=250</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),peliculas)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">1</property>
			<label>$LOCALIZE[16101]</label>
			<label2>Movies</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.UnwatchedMoviesBackground)]</icon>
			<thumb />
			<property name="labelID">16101</property>
			<property name="defaultID">135</property>
			<onclick>ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</onclick>
			<property name="path">ActivateWindow(10025,plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500,return)</property>
			<property name="list">plugin://script.skin.helper.widgets/?action=unwatched&amp;mediatype=movies&amp;limit=2500</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),peliculas)</visible>
			<property name="group">peliculas</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-series">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick>ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</property>
			<property name="list">library://video/recentlyaddedepisodes.xml/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>Library.HasContent(TVShows)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-series">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[31051]</label>
			<label2>TV shows</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.AllTvShowsBackground)]</icon>
			<thumb />
			<property name="labelID">31051</property>
			<property name="defaultID">369</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Window(10000).Property(submenuVisibility),series)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/titles/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/titles/,return)</property>
			<property name="list">videodb://tvshows/titles/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[20387]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.RecentEpisodesBackground)]</icon>
			<thumb />
			<property name="labelID">20387</property>
			<property name="defaultID">20387</property>
			<onclick>ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/recentlyaddedepisodes.xml/,return)</property>
			<property name="list">library://video/recentlyaddedepisodes.xml/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),series)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[626]</label>
			<label2>Videos</label2>
			<icon>$INFO[Window(Home).Property(SkinHelper.InProgressShowsBackground)]</icon>
			<thumb />
			<property name="labelID">626</property>
			<property name="defaultID">626</property>
			<onclick>ActivateWindow(10025,library://video/inprogressshows.xml,return)</onclick>
			<property name="path">ActivateWindow(10025,library://video/inprogressshows.xml,return)</property>
			<property name="list">library://video/inprogressshows.xml</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),series)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">2</property>
			<label>$LOCALIZE[135]</label>
			<label2>TV shows</label2>
			<icon>DefaultShortcut.png</icon>
			<thumb />
			<property name="labelID">135</property>
			<property name="defaultID">135</property>
			<visible>[Library.HasContent(TVShows)] + String.IsEqual(Window(10000).Property(submenuVisibility),series)</visible>
			<onclick>ActivateWindow(10025,videodb://tvshows/genres/,return)</onclick>
			<property name="path">ActivateWindow(10025,videodb://tvshows/genres/,return)</property>
			<property name="list">videodb://tvshows/genres/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">series</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-livetv">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-livetv">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-netflix">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-netflix">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-weather">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-weather">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-plugin-video-youtube">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-plugin-video-youtube">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-num-10134">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-num-10134">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-eliminacache">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-alt-eliminacache">
		<description>No items</description>
	</include>
	<include name="skinshortcuts-group-num-10040">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-num-10040">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[10001]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/programs.png</icon>
			<thumb />
			<property name="labelID">programs</property>
			<property name="defaultID">programs</property>
			<onclick>ActivateWindow(Programs,Addons,return)</onclick>
			<property name="path">ActivateWindow(Programs,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1037]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/videoaddons.png</icon>
			<thumb />
			<property name="labelID">1037</property>
			<property name="defaultID">1037</property>
			<onclick>ActivateWindow(Videos,addons,return)</onclick>
			<property name="path">ActivateWindow(Videos,addons,return)</property>
			<property name="list">addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1038]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/music.png</icon>
			<thumb />
			<property name="labelID">1038</property>
			<property name="defaultID">1038</property>
			<onclick>ActivateWindow(10502,addons://sources/audio/,return)</onclick>
			<property name="path">ActivateWindow(10502,addons://sources/audio/,return)</property>
			<property name="list">addons://sources/audio/</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">9</property>
			<label>$LOCALIZE[1039]</label>
			<label2 />
			<icon>resource://resource.images.skinicons.wide/pictures.png</icon>
			<thumb />
			<property name="labelID">1039</property>
			<property name="defaultID">1039</property>
			<onclick>ActivateWindow(Pictures,Addons,return)</onclick>
			<property name="path">ActivateWindow(Pictures,Addons,return)</property>
			<property name="list">Addons</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),num-10040)</visible>
			<property name="group">10040</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>system.getbool(eventlog.enabled)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-settings">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[20077]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">20077</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(SkinSettings)</onclick>
			<property name="path">ActivateWindow(SkinSettings)</property>
			<property name="list">SkinSettings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[10004]</label>
			<label2>Settings</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">settings</property>
			<property name="defaultID">20077</property>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[7]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/filemanager.png</icon>
			<thumb />
			<property name="labelID">7</property>
			<property name="defaultID">7</property>
			<onclick>ActivateWindow(FileManager)</onclick>
			<property name="path">ActivateWindow(FileManager)</property>
			<property name="list">FileManager</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">10</property>
			<label>$LOCALIZE[14111]</label>
			<label2>Common Shortcut</label2>
			<icon>resource://resource.images.skinicons.wide/settings.png</icon>
			<thumb />
			<property name="labelID">14111</property>
			<property name="defaultID">14111</property>
			<visible>[system.getbool(eventlog.enabled)] + String.IsEqual(Window(10000).Property(submenuVisibility),settings)</visible>
			<onclick>ActivateWindow(eventlog)</onclick>
			<property name="path">ActivateWindow(eventlog)</property>
			<property name="list">eventlog</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">settings</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>System.ShowExitButton</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-group-alt-powermenu">
		<item id="1">
			<property name="id">$NUMBER[1]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[20126]</label>
			<label2>Kodi Command</label2>
			<icon>common/lock.png</icon>
			<thumb />
			<property name="labelID">20126</property>
			<property name="defaultID">20126</property>
			<visible>[[[System.HasLoginScreen | IntegerGreaterThan(System.ProfileCount,1)] + System.Loggedon] + [System.HasLoginScreen]] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>System.LogOff</onclick>
			<property name="path">System.LogOff</property>
			<property name="list">System.LogOff</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="2">
			<property name="id">$NUMBER[2]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[5]</label>
			<label2>Kodi Command</label2>
			<icon>common/settings1.png</icon>
			<thumb />
			<property name="labelID">5</property>
			<property name="defaultID">5</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ActivateWindow(Settings)</onclick>
			<property name="path">ActivateWindow(Settings)</property>
			<property name="list">Settings</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="3">
			<property name="id">$NUMBER[3]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13009]</label>
			<label2>Kodi Command</label2>
			<icon>common/exit1.png</icon>
			<thumb />
			<property name="labelID">13009</property>
			<property name="defaultID">13009</property>
			<visible>[System.ShowExitButton] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Quit()</onclick>
			<property name="path">Quit()</property>
			<property name="list">Quit()</property>
			<visible>String.IsEqual(System.ProfileName,Master user)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="4">
			<property name="id">$NUMBER[4]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13016]</label>
			<label2>Kodi Command</label2>
			<icon>common/shutdown1.png</icon>
			<thumb />
			<property name="labelID">13016</property>
			<property name="defaultID">13016</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>ShutDown</onclick>
			<property name="path">ShutDown</property>
			<property name="list">ShutDown</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
		<item id="5">
			<property name="id">$NUMBER[5]</property>
			<property name="mainmenuid">11</property>
			<label>$LOCALIZE[13013]</label>
			<label2>Kodi Command</label2>
			<icon>common/reboot1.png</icon>
			<thumb />
			<property name="labelID">13013</property>
			<property name="defaultID">13013</property>
			<onclick condition="Window.IsActive(DialogButtonMenu.xml)">Close</onclick>
			<onclick>Reboot</onclick>
			<property name="path">Reboot</property>
			<property name="list">Reboot</property>
			<visible>[String.IsEqual(System.ProfileName,Master user)] + String.IsEqual(Window(10000).Property(submenuVisibility),powermenu)</visible>
			<property name="group">powermenu</property>
			<property name="isSubmenu">True</property>
		</item>
	</include>
	<include name="skinshortcuts-template-spotlightwidget">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-spotlightwidget-Master user</include>
	</include>
	<include name="skinshortcuts-template-spotlightwidget-Master user">
		<control id="1508" type="panel">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),peliculas)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=movies&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
		<control id="1508" type="panel">
			<visible>String.IsEqual(Container(300).ListItem.Property(submenuVisibility),series)</visible>
			<include>EnhancedHomeSpotLightWidgetLayout</include>
			<content target="videos">plugin://script.skin.helper.widgets/?action=random&amp;mediatype=tvshows&amp;reload=$INFO[Window(Home).Property(widgetreload)]</content>
		</control>
	</include>
	<include name="skinshortcuts-template-Widgets">
		<include condition="String.IsEqual(System.ProfileName,Master user)">skinshortcuts-template-Widgets-Master user</include>
	</include>
	<include name="skinshortcuts-template-Widgets-Master user">
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="1" />
			<param name="submenuid" value="peliculas" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="true" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="landscapelarge" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1510" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetName" value="Peliculas en español" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1510" />
			<param name="widgetName" value="Peliculas en español" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://plugin.video.flixnet/?action=moviePage&amp;url=http%3A%2F%2Fwww.imdb.com%2Fsearch%2Ftitle%3Ftitle_type%3Dfeature%2Ctv_movie%26num_votes%3D100%2C%26production_status%3Dreleased%26primary_language%3Des%26sort%3Dmoviemeter%2Casc%26count%3D40%26start%3D1%26page%3D2%26ref_%3Dadv_nxt&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-peliculas,0) | !Skin.String(widgetvalue-peliculas)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1520" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetName" value="Top Peliculas en ingles" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1520" />
			<param name="widgetName" value="Top Peliculas en ingles" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://plugin.video.genesisreborn/?action=movieWidget&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-peliculas,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1530" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-peliculas,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1540" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-peliculas,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1550" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-peliculas,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1560" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-peliculas,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1570" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-peliculas,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="1580" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="1580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="peliculas" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-peliculas,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="2" />
			<param name="submenuid" value="series" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2510" />
			<param name="submenuid" value="series" />
			<param name="widgetName" value="Series" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2510" />
			<param name="widgetName" value="Series" />
			<param name="submenuid" value="series" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://plugin.video.series/?action=series&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-series,0) | !Skin.String(widgetvalue-series)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2520" />
			<param name="submenuid" value="series" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="series" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-series,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2530" />
			<param name="submenuid" value="series" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="series" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-series,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2540" />
			<param name="submenuid" value="series" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="series" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-series,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2550" />
			<param name="submenuid" value="series" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="series" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-series,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2560" />
			<param name="submenuid" value="series" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="series" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-series,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2570" />
			<param name="submenuid" value="series" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="series" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-series,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="2580" />
			<param name="submenuid" value="series" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="2580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="series" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-series,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="3" />
			<param name="submenuid" value="livetv" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3510" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="Total Play" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3510" />
			<param name="widgetName" value="Total Play" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="videos" />
			<param name="widgetPath" value="plugin://plugin.video.adryanlist/?url=http%3A%2F%2Fadryanlist.org%2Fadryan%2Ftotalp.xml&amp;mode=1&amp;name=%5BCOLOR+lime%5D%E2%80%A2%5B%2FCOLOR%5D%5BCOLOR+deepskyblue%5D++TotalPlay+%5B%2FCOLOR%5D+%5BCOLOR+lightgreen%5D+%5B%2FCOLOR%5D++&amp;fanart=http%3A%2F%2Fadryanlist.org%2Fadryan%2Fimg%2Ffanart.jpg&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-livetv,0) | !Skin.String(widgetvalue-livetv)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3520" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3530" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3540" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3550" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3560" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3570" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="3580" />
			<param name="submenuid" value="livetv" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="3580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="livetv" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-livetv,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="4" />
			<param name="submenuid" value="netflix" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4510" />
			<param name="submenuid" value="netflix" />
			<param name="widgetName" value="Streamin" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4510" />
			<param name="widgetName" value="Streamin" />
			<param name="submenuid" value="netflix" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="programs" />
			<param name="widgetPath" value="plugin://plugin.program.chrome.launcher?reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-netflix,0) | !Skin.String(widgetvalue-netflix)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4520" />
			<param name="submenuid" value="netflix" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="netflix" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-netflix,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4530" />
			<param name="submenuid" value="netflix" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="netflix" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-netflix,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4540" />
			<param name="submenuid" value="netflix" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="netflix" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-netflix,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4550" />
			<param name="submenuid" value="netflix" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="netflix" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-netflix,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4560" />
			<param name="submenuid" value="netflix" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="netflix" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-netflix,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4570" />
			<param name="submenuid" value="netflix" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="netflix" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-netflix,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="4580" />
			<param name="submenuid" value="netflix" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="4580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="netflix" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-netflix,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="5" />
			<param name="submenuid" value="weather" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5510" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="$LOCALIZE[8]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="weather" />
			<param name="widgetid" value="5510" />
			<param name="widgetName" value="$LOCALIZE[8]" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[WeatherWidget]" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-weather,0) | !Skin.String(widgetvalue-weather)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5520" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5530" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5540" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5550" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5560" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5570" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="5580" />
			<param name="submenuid" value="weather" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="5580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="weather" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-weather,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="8" />
			<param name="submenuid" value="eliminacache" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="landscapelarge" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8510" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetName" value="Cache" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8510" />
			<param name="widgetName" value="Cache" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="programs" />
			<param name="widgetPath" value="plugin://plugin.video.hubmaintenance/?url=url&amp;mode=9&amp;name=Maintenance&amp;iconimage=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Fmaintenance.jpg&amp;fanart=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Ffanart%2Fbeginners.jpg&amp;description=Safely+delete+all+cache+from+plugins&amp;special=&amp;reload=$INFO[Window(Home).Property(widgetreload)]" />
			<param name="widgetStyle" value="widget_layout_landscapelarge" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-eliminacache,0) | !Skin.String(widgetvalue-eliminacache)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8520" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-eliminacache,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8530" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-eliminacache,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8540" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-eliminacache,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8550" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-eliminacache,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8560" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-eliminacache,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8570" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-eliminacache,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="8580" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="8580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="eliminacache" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-eliminacache,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + ![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + true" content="widget_header_single" name="widget_header_single">
			<param name="mainmenuid" value="10" />
			<param name="submenuid" value="settings" />
			<param name="hasWidget0" value="true" />
			<param name="hasWidget1" value="false" />
			<param name="hasWidget2" value="false" />
			<param name="hasWidget3" value="false" />
			<param name="hasWidget4" value="false" />
			<param name="hasWidget5" value="false" />
			<param name="hasWidget6" value="false" />
			<param name="hasWidget7" value="false" />
			<param name="widgetStyle1" value="default" />
			<param name="widgetStyle2" value="default" />
			<param name="widgetStyle3" value="default" />
			<param name="widgetStyle4" value="default" />
			<param name="widgetStyle5" value="default" />
			<param name="widgetStyle6" value="default" />
			<param name="widgetStyle7" value="default" />
			<param name="widgetStyle8" value="default" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + true" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10510" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="$LOCALIZE[130]" />
		</include>
		<include condition="true" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="systeminfo" />
			<param name="widgetid" value="10510" />
			<param name="widgetName" value="$LOCALIZE[130]" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="static" />
			<param name="widgetPath" value="$INCLUDE[SystemInfoWidget]" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + [Skin.String(widgetvalue-settings,0) | !Skin.String(widgetvalue-settings)]]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10520" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10520" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,1)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10530" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10530" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,2)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10540" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10540" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,3)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10550" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10550" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,4)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10560" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10560" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,5)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10570" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10570" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,6)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
		<include condition="!Skin.String(HomeLayout,win10) + true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)] + false" content="widget_header_multi" name="widget_header_multi">
			<param name="widgetid" value="10580" />
			<param name="submenuid" value="settings" />
			<param name="widgetName" value="" />
		</include>
		<include condition="false" content="widget_base" name="widget_base">
			<param name="containerType" value="panel" />
			<param name="contentStyle" value="normal" />
			<param name="widgetid" value="10580" />
			<param name="widgetName" value="" />
			<param name="submenuid" value="settings" />
			<param name="widgetTags" value="WidgetTagOverlayAuto" />
			<param name="widgetTarget" value="" />
			<param name="widgetPath" value="" />
			<param name="widgetStyle" value="widget_layout_default" />
			<param name="widgetInfoPanel" value="top" />
			<param name="visibility" value="Skin.String(HomeLayout,win10) | [true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] | [![true + [SubString(Skin.String(HomeLayout),ver) | SubString(Skin.String(HomeLayout),netflix)]] + Skin.String(widgetvalue-settings,7)]" />
			<param name="multiRows" value="false + SubString(Skin.String(HomeLayout),ver)" />
		</include>
	</include>
	<variable name="1510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.video.flixnet/?action=moviePage&amp;url=http%3A%2F%2Fwww.imdb.com%2Fsearch%2Ftitle%3Ftitle_type%3Dfeature%2Ctv_movie%26num_votes%3D100%2C%26production_status%3Dreleased%26primary_language%3Des%26sort%3Dmoviemeter%2Casc%26count%3D40%26start%3D1%26page%3D2%26ref_%3Dadv_nxt&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-1510">
		<value condition="StringCompare(Container(1510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1510).ListItem.label] $INFO[Container(1510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Title) + SubString(Container(1510).ListItem.FolderPath, pvr://)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Season) + !IsEmpty(Container(1510).ListItem.Episode) + !StringCompare(Container(1510).ListItem.TvShowTitle,Container(1510).ListItem.Title)">[UPPERCASE]S$INFO[Container(1510).ListItem.Season]E$INFO[Container(1510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Title)">$INFO[Container(1510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Label)">$INFO[Container(1510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1510">
		<value condition="!IsEmpty(Container(1510).ListItem.TvShowTitle) + !IsEmpty(Container(1510).ListItem.Genre)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.TvShowTitle)">$INFO[Container(1510).ListItem.TvShowTitle,, • ]$INFO[Container(1510).ListItem.Premiered,, • ]$INFO[Container(1510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Year)">$INFO[Container(1510).ListItem.Year,, • ]$INFO[Container(1510).ListItem.Duration,,min. • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Artist) + !IsEmpty(Container(1510).ListItem.Album)">$INFO[Container(1510).ListItem.Artist,, • ]$INFO[Container(1510).ListItem.Album,, • ]$INFO[Container(1510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.Property(StartTime))">$INFO[Container(1510).ListItem.Property(ChannelName),, • ]$INFO[Container(1510).ListItem.Property(StartTime),, - ]$INFO[Container(1510).ListItem.Property(EndTime),, • ]$INFO[Container(1510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1510).ListItem.StartTime)">$INFO[Container(1510).ListItem.ChannelName,, • ]$INFO[Container(1510).ListItem.StartTime,, - ]$INFO[Container(1510).ListItem.EndTime,, • ]$INFO[Container(1510).ListItem.Genre]</value>
	</variable>
	<variable name="1520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.video.genesisreborn/?action=movieWidget&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-1520">
		<value condition="StringCompare(Container(1520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1520).ListItem.label] $INFO[Container(1520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Title) + SubString(Container(1520).ListItem.FolderPath, pvr://)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Season) + !IsEmpty(Container(1520).ListItem.Episode) + !StringCompare(Container(1520).ListItem.TvShowTitle,Container(1520).ListItem.Title)">[UPPERCASE]S$INFO[Container(1520).ListItem.Season]E$INFO[Container(1520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Title)">$INFO[Container(1520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Label)">$INFO[Container(1520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1520">
		<value condition="!IsEmpty(Container(1520).ListItem.TvShowTitle) + !IsEmpty(Container(1520).ListItem.Genre)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.TvShowTitle)">$INFO[Container(1520).ListItem.TvShowTitle,, • ]$INFO[Container(1520).ListItem.Premiered,, • ]$INFO[Container(1520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Year)">$INFO[Container(1520).ListItem.Year,, • ]$INFO[Container(1520).ListItem.Duration,,min. • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Artist) + !IsEmpty(Container(1520).ListItem.Album)">$INFO[Container(1520).ListItem.Artist,, • ]$INFO[Container(1520).ListItem.Album,, • ]$INFO[Container(1520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.Property(StartTime))">$INFO[Container(1520).ListItem.Property(ChannelName),, • ]$INFO[Container(1520).ListItem.Property(StartTime),, - ]$INFO[Container(1520).ListItem.Property(EndTime),, • ]$INFO[Container(1520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1520).ListItem.StartTime)">$INFO[Container(1520).ListItem.ChannelName,, • ]$INFO[Container(1520).ListItem.StartTime,, - ]$INFO[Container(1520).ListItem.EndTime,, • ]$INFO[Container(1520).ListItem.Genre]</value>
	</variable>
	<variable name="1530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1530">
		<value condition="StringCompare(Container(1530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1530).ListItem.label] $INFO[Container(1530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Title) + SubString(Container(1530).ListItem.FolderPath, pvr://)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Season) + !IsEmpty(Container(1530).ListItem.Episode) + !StringCompare(Container(1530).ListItem.TvShowTitle,Container(1530).ListItem.Title)">[UPPERCASE]S$INFO[Container(1530).ListItem.Season]E$INFO[Container(1530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Title)">$INFO[Container(1530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Label)">$INFO[Container(1530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1530">
		<value condition="!IsEmpty(Container(1530).ListItem.TvShowTitle) + !IsEmpty(Container(1530).ListItem.Genre)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.TvShowTitle)">$INFO[Container(1530).ListItem.TvShowTitle,, • ]$INFO[Container(1530).ListItem.Premiered,, • ]$INFO[Container(1530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Year)">$INFO[Container(1530).ListItem.Year,, • ]$INFO[Container(1530).ListItem.Duration,,min. • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Artist) + !IsEmpty(Container(1530).ListItem.Album)">$INFO[Container(1530).ListItem.Artist,, • ]$INFO[Container(1530).ListItem.Album,, • ]$INFO[Container(1530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.Property(StartTime))">$INFO[Container(1530).ListItem.Property(ChannelName),, • ]$INFO[Container(1530).ListItem.Property(StartTime),, - ]$INFO[Container(1530).ListItem.Property(EndTime),, • ]$INFO[Container(1530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1530).ListItem.StartTime)">$INFO[Container(1530).ListItem.ChannelName,, • ]$INFO[Container(1530).ListItem.StartTime,, - ]$INFO[Container(1530).ListItem.EndTime,, • ]$INFO[Container(1530).ListItem.Genre]</value>
	</variable>
	<variable name="1540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1540">
		<value condition="StringCompare(Container(1540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1540).ListItem.label] $INFO[Container(1540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Title) + SubString(Container(1540).ListItem.FolderPath, pvr://)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Season) + !IsEmpty(Container(1540).ListItem.Episode) + !StringCompare(Container(1540).ListItem.TvShowTitle,Container(1540).ListItem.Title)">[UPPERCASE]S$INFO[Container(1540).ListItem.Season]E$INFO[Container(1540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Title)">$INFO[Container(1540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Label)">$INFO[Container(1540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1540">
		<value condition="!IsEmpty(Container(1540).ListItem.TvShowTitle) + !IsEmpty(Container(1540).ListItem.Genre)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.TvShowTitle)">$INFO[Container(1540).ListItem.TvShowTitle,, • ]$INFO[Container(1540).ListItem.Premiered,, • ]$INFO[Container(1540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Year)">$INFO[Container(1540).ListItem.Year,, • ]$INFO[Container(1540).ListItem.Duration,,min. • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Artist) + !IsEmpty(Container(1540).ListItem.Album)">$INFO[Container(1540).ListItem.Artist,, • ]$INFO[Container(1540).ListItem.Album,, • ]$INFO[Container(1540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.Property(StartTime))">$INFO[Container(1540).ListItem.Property(ChannelName),, • ]$INFO[Container(1540).ListItem.Property(StartTime),, - ]$INFO[Container(1540).ListItem.Property(EndTime),, • ]$INFO[Container(1540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1540).ListItem.StartTime)">$INFO[Container(1540).ListItem.ChannelName,, • ]$INFO[Container(1540).ListItem.StartTime,, - ]$INFO[Container(1540).ListItem.EndTime,, • ]$INFO[Container(1540).ListItem.Genre]</value>
	</variable>
	<variable name="1550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1550">
		<value condition="StringCompare(Container(1550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1550).ListItem.label] $INFO[Container(1550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Title) + SubString(Container(1550).ListItem.FolderPath, pvr://)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Season) + !IsEmpty(Container(1550).ListItem.Episode) + !StringCompare(Container(1550).ListItem.TvShowTitle,Container(1550).ListItem.Title)">[UPPERCASE]S$INFO[Container(1550).ListItem.Season]E$INFO[Container(1550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Title)">$INFO[Container(1550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Label)">$INFO[Container(1550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1550">
		<value condition="!IsEmpty(Container(1550).ListItem.TvShowTitle) + !IsEmpty(Container(1550).ListItem.Genre)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.TvShowTitle)">$INFO[Container(1550).ListItem.TvShowTitle,, • ]$INFO[Container(1550).ListItem.Premiered,, • ]$INFO[Container(1550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Year)">$INFO[Container(1550).ListItem.Year,, • ]$INFO[Container(1550).ListItem.Duration,,min. • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Artist) + !IsEmpty(Container(1550).ListItem.Album)">$INFO[Container(1550).ListItem.Artist,, • ]$INFO[Container(1550).ListItem.Album,, • ]$INFO[Container(1550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.Property(StartTime))">$INFO[Container(1550).ListItem.Property(ChannelName),, • ]$INFO[Container(1550).ListItem.Property(StartTime),, - ]$INFO[Container(1550).ListItem.Property(EndTime),, • ]$INFO[Container(1550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1550).ListItem.StartTime)">$INFO[Container(1550).ListItem.ChannelName,, • ]$INFO[Container(1550).ListItem.StartTime,, - ]$INFO[Container(1550).ListItem.EndTime,, • ]$INFO[Container(1550).ListItem.Genre]</value>
	</variable>
	<variable name="1560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1560">
		<value condition="StringCompare(Container(1560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1560).ListItem.label] $INFO[Container(1560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Title) + SubString(Container(1560).ListItem.FolderPath, pvr://)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Season) + !IsEmpty(Container(1560).ListItem.Episode) + !StringCompare(Container(1560).ListItem.TvShowTitle,Container(1560).ListItem.Title)">[UPPERCASE]S$INFO[Container(1560).ListItem.Season]E$INFO[Container(1560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Title)">$INFO[Container(1560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Label)">$INFO[Container(1560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1560">
		<value condition="!IsEmpty(Container(1560).ListItem.TvShowTitle) + !IsEmpty(Container(1560).ListItem.Genre)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.TvShowTitle)">$INFO[Container(1560).ListItem.TvShowTitle,, • ]$INFO[Container(1560).ListItem.Premiered,, • ]$INFO[Container(1560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Year)">$INFO[Container(1560).ListItem.Year,, • ]$INFO[Container(1560).ListItem.Duration,,min. • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Artist) + !IsEmpty(Container(1560).ListItem.Album)">$INFO[Container(1560).ListItem.Artist,, • ]$INFO[Container(1560).ListItem.Album,, • ]$INFO[Container(1560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.Property(StartTime))">$INFO[Container(1560).ListItem.Property(ChannelName),, • ]$INFO[Container(1560).ListItem.Property(StartTime),, - ]$INFO[Container(1560).ListItem.Property(EndTime),, • ]$INFO[Container(1560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1560).ListItem.StartTime)">$INFO[Container(1560).ListItem.ChannelName,, • ]$INFO[Container(1560).ListItem.StartTime,, - ]$INFO[Container(1560).ListItem.EndTime,, • ]$INFO[Container(1560).ListItem.Genre]</value>
	</variable>
	<variable name="1570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1570">
		<value condition="StringCompare(Container(1570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1570).ListItem.label] $INFO[Container(1570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Title) + SubString(Container(1570).ListItem.FolderPath, pvr://)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Season) + !IsEmpty(Container(1570).ListItem.Episode) + !StringCompare(Container(1570).ListItem.TvShowTitle,Container(1570).ListItem.Title)">[UPPERCASE]S$INFO[Container(1570).ListItem.Season]E$INFO[Container(1570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Title)">$INFO[Container(1570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Label)">$INFO[Container(1570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1570">
		<value condition="!IsEmpty(Container(1570).ListItem.TvShowTitle) + !IsEmpty(Container(1570).ListItem.Genre)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.TvShowTitle)">$INFO[Container(1570).ListItem.TvShowTitle,, • ]$INFO[Container(1570).ListItem.Premiered,, • ]$INFO[Container(1570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Year)">$INFO[Container(1570).ListItem.Year,, • ]$INFO[Container(1570).ListItem.Duration,,min. • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Artist) + !IsEmpty(Container(1570).ListItem.Album)">$INFO[Container(1570).ListItem.Artist,, • ]$INFO[Container(1570).ListItem.Album,, • ]$INFO[Container(1570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.Property(StartTime))">$INFO[Container(1570).ListItem.Property(ChannelName),, • ]$INFO[Container(1570).ListItem.Property(StartTime),, - ]$INFO[Container(1570).ListItem.Property(EndTime),, • ]$INFO[Container(1570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1570).ListItem.StartTime)">$INFO[Container(1570).ListItem.ChannelName,, • ]$INFO[Container(1570).ListItem.StartTime,, - ]$INFO[Container(1570).ListItem.EndTime,, • ]$INFO[Container(1570).ListItem.Genre]</value>
	</variable>
	<variable name="1580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-1580">
		<value condition="StringCompare(Container(1580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(1580).ListItem.label] $INFO[Container(1580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Title) + SubString(Container(1580).ListItem.FolderPath, pvr://)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Season) + !IsEmpty(Container(1580).ListItem.Episode) + !StringCompare(Container(1580).ListItem.TvShowTitle,Container(1580).ListItem.Title)">[UPPERCASE]S$INFO[Container(1580).ListItem.Season]E$INFO[Container(1580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(1580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Title)">$INFO[Container(1580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Label)">$INFO[Container(1580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-1580">
		<value condition="!IsEmpty(Container(1580).ListItem.TvShowTitle) + !IsEmpty(Container(1580).ListItem.Genre)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.TvShowTitle)">$INFO[Container(1580).ListItem.TvShowTitle,, • ]$INFO[Container(1580).ListItem.Premiered,, • ]$INFO[Container(1580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Year)">$INFO[Container(1580).ListItem.Year,, • ]$INFO[Container(1580).ListItem.Duration,,min. • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Artist) + !IsEmpty(Container(1580).ListItem.Album)">$INFO[Container(1580).ListItem.Artist,, • ]$INFO[Container(1580).ListItem.Album,, • ]$INFO[Container(1580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.Property(StartTime))">$INFO[Container(1580).ListItem.Property(ChannelName),, • ]$INFO[Container(1580).ListItem.Property(StartTime),, - ]$INFO[Container(1580).ListItem.Property(EndTime),, • ]$INFO[Container(1580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(1580).ListItem.StartTime)">$INFO[Container(1580).ListItem.ChannelName,, • ]$INFO[Container(1580).ListItem.StartTime,, - ]$INFO[Container(1580).ListItem.EndTime,, • ]$INFO[Container(1580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-1">
		<value condition="Skin.String(widgetvalue-peliculas,7)" />
		<value condition="Skin.String(widgetvalue-peliculas,6)" />
		<value condition="Skin.String(widgetvalue-peliculas,5)" />
		<value condition="Skin.String(widgetvalue-peliculas,4)" />
		<value condition="Skin.String(widgetvalue-peliculas,3)" />
		<value condition="Skin.String(widgetvalue-peliculas,2)" />
		<value condition="Skin.String(widgetvalue-peliculas,1)">Top Peliculas en ingles</value>
		<value>Peliculas en español</value>
	</variable>
	<variable name="2510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.video.series/?action=series&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-2510">
		<value condition="StringCompare(Container(2510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2510).ListItem.label] $INFO[Container(2510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.Title) + SubString(Container(2510).ListItem.FolderPath, pvr://)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.Season) + !IsEmpty(Container(2510).ListItem.Episode) + !StringCompare(Container(2510).ListItem.TvShowTitle,Container(2510).ListItem.Title)">[UPPERCASE]S$INFO[Container(2510).ListItem.Season]E$INFO[Container(2510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.Title)">$INFO[Container(2510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.Label)">$INFO[Container(2510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2510">
		<value condition="!IsEmpty(Container(2510).ListItem.TvShowTitle) + !IsEmpty(Container(2510).ListItem.Genre)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.TvShowTitle)">$INFO[Container(2510).ListItem.TvShowTitle,, • ]$INFO[Container(2510).ListItem.Premiered,, • ]$INFO[Container(2510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.Year)">$INFO[Container(2510).ListItem.Year,, • ]$INFO[Container(2510).ListItem.Duration,,min. • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.Artist) + !IsEmpty(Container(2510).ListItem.Album)">$INFO[Container(2510).ListItem.Artist,, • ]$INFO[Container(2510).ListItem.Album,, • ]$INFO[Container(2510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.Property(StartTime))">$INFO[Container(2510).ListItem.Property(ChannelName),, • ]$INFO[Container(2510).ListItem.Property(StartTime),, - ]$INFO[Container(2510).ListItem.Property(EndTime),, • ]$INFO[Container(2510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2510).ListItem.StartTime)">$INFO[Container(2510).ListItem.ChannelName,, • ]$INFO[Container(2510).ListItem.StartTime,, - ]$INFO[Container(2510).ListItem.EndTime,, • ]$INFO[Container(2510).ListItem.Genre]</value>
	</variable>
	<variable name="2520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2520">
		<value condition="StringCompare(Container(2520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2520).ListItem.label] $INFO[Container(2520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.Title) + SubString(Container(2520).ListItem.FolderPath, pvr://)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.Season) + !IsEmpty(Container(2520).ListItem.Episode) + !StringCompare(Container(2520).ListItem.TvShowTitle,Container(2520).ListItem.Title)">[UPPERCASE]S$INFO[Container(2520).ListItem.Season]E$INFO[Container(2520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.Title)">$INFO[Container(2520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.Label)">$INFO[Container(2520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2520">
		<value condition="!IsEmpty(Container(2520).ListItem.TvShowTitle) + !IsEmpty(Container(2520).ListItem.Genre)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.TvShowTitle)">$INFO[Container(2520).ListItem.TvShowTitle,, • ]$INFO[Container(2520).ListItem.Premiered,, • ]$INFO[Container(2520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.Year)">$INFO[Container(2520).ListItem.Year,, • ]$INFO[Container(2520).ListItem.Duration,,min. • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.Artist) + !IsEmpty(Container(2520).ListItem.Album)">$INFO[Container(2520).ListItem.Artist,, • ]$INFO[Container(2520).ListItem.Album,, • ]$INFO[Container(2520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.Property(StartTime))">$INFO[Container(2520).ListItem.Property(ChannelName),, • ]$INFO[Container(2520).ListItem.Property(StartTime),, - ]$INFO[Container(2520).ListItem.Property(EndTime),, • ]$INFO[Container(2520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2520).ListItem.StartTime)">$INFO[Container(2520).ListItem.ChannelName,, • ]$INFO[Container(2520).ListItem.StartTime,, - ]$INFO[Container(2520).ListItem.EndTime,, • ]$INFO[Container(2520).ListItem.Genre]</value>
	</variable>
	<variable name="2530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2530">
		<value condition="StringCompare(Container(2530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2530).ListItem.label] $INFO[Container(2530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.Title) + SubString(Container(2530).ListItem.FolderPath, pvr://)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.Season) + !IsEmpty(Container(2530).ListItem.Episode) + !StringCompare(Container(2530).ListItem.TvShowTitle,Container(2530).ListItem.Title)">[UPPERCASE]S$INFO[Container(2530).ListItem.Season]E$INFO[Container(2530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.Title)">$INFO[Container(2530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.Label)">$INFO[Container(2530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2530">
		<value condition="!IsEmpty(Container(2530).ListItem.TvShowTitle) + !IsEmpty(Container(2530).ListItem.Genre)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.TvShowTitle)">$INFO[Container(2530).ListItem.TvShowTitle,, • ]$INFO[Container(2530).ListItem.Premiered,, • ]$INFO[Container(2530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.Year)">$INFO[Container(2530).ListItem.Year,, • ]$INFO[Container(2530).ListItem.Duration,,min. • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.Artist) + !IsEmpty(Container(2530).ListItem.Album)">$INFO[Container(2530).ListItem.Artist,, • ]$INFO[Container(2530).ListItem.Album,, • ]$INFO[Container(2530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.Property(StartTime))">$INFO[Container(2530).ListItem.Property(ChannelName),, • ]$INFO[Container(2530).ListItem.Property(StartTime),, - ]$INFO[Container(2530).ListItem.Property(EndTime),, • ]$INFO[Container(2530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2530).ListItem.StartTime)">$INFO[Container(2530).ListItem.ChannelName,, • ]$INFO[Container(2530).ListItem.StartTime,, - ]$INFO[Container(2530).ListItem.EndTime,, • ]$INFO[Container(2530).ListItem.Genre]</value>
	</variable>
	<variable name="2540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2540">
		<value condition="StringCompare(Container(2540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2540).ListItem.label] $INFO[Container(2540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.Title) + SubString(Container(2540).ListItem.FolderPath, pvr://)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.Season) + !IsEmpty(Container(2540).ListItem.Episode) + !StringCompare(Container(2540).ListItem.TvShowTitle,Container(2540).ListItem.Title)">[UPPERCASE]S$INFO[Container(2540).ListItem.Season]E$INFO[Container(2540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.Title)">$INFO[Container(2540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.Label)">$INFO[Container(2540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2540">
		<value condition="!IsEmpty(Container(2540).ListItem.TvShowTitle) + !IsEmpty(Container(2540).ListItem.Genre)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.TvShowTitle)">$INFO[Container(2540).ListItem.TvShowTitle,, • ]$INFO[Container(2540).ListItem.Premiered,, • ]$INFO[Container(2540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.Year)">$INFO[Container(2540).ListItem.Year,, • ]$INFO[Container(2540).ListItem.Duration,,min. • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.Artist) + !IsEmpty(Container(2540).ListItem.Album)">$INFO[Container(2540).ListItem.Artist,, • ]$INFO[Container(2540).ListItem.Album,, • ]$INFO[Container(2540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.Property(StartTime))">$INFO[Container(2540).ListItem.Property(ChannelName),, • ]$INFO[Container(2540).ListItem.Property(StartTime),, - ]$INFO[Container(2540).ListItem.Property(EndTime),, • ]$INFO[Container(2540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2540).ListItem.StartTime)">$INFO[Container(2540).ListItem.ChannelName,, • ]$INFO[Container(2540).ListItem.StartTime,, - ]$INFO[Container(2540).ListItem.EndTime,, • ]$INFO[Container(2540).ListItem.Genre]</value>
	</variable>
	<variable name="2550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2550">
		<value condition="StringCompare(Container(2550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2550).ListItem.label] $INFO[Container(2550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.Title) + SubString(Container(2550).ListItem.FolderPath, pvr://)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.Season) + !IsEmpty(Container(2550).ListItem.Episode) + !StringCompare(Container(2550).ListItem.TvShowTitle,Container(2550).ListItem.Title)">[UPPERCASE]S$INFO[Container(2550).ListItem.Season]E$INFO[Container(2550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.Title)">$INFO[Container(2550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.Label)">$INFO[Container(2550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2550">
		<value condition="!IsEmpty(Container(2550).ListItem.TvShowTitle) + !IsEmpty(Container(2550).ListItem.Genre)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.TvShowTitle)">$INFO[Container(2550).ListItem.TvShowTitle,, • ]$INFO[Container(2550).ListItem.Premiered,, • ]$INFO[Container(2550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.Year)">$INFO[Container(2550).ListItem.Year,, • ]$INFO[Container(2550).ListItem.Duration,,min. • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.Artist) + !IsEmpty(Container(2550).ListItem.Album)">$INFO[Container(2550).ListItem.Artist,, • ]$INFO[Container(2550).ListItem.Album,, • ]$INFO[Container(2550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.Property(StartTime))">$INFO[Container(2550).ListItem.Property(ChannelName),, • ]$INFO[Container(2550).ListItem.Property(StartTime),, - ]$INFO[Container(2550).ListItem.Property(EndTime),, • ]$INFO[Container(2550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2550).ListItem.StartTime)">$INFO[Container(2550).ListItem.ChannelName,, • ]$INFO[Container(2550).ListItem.StartTime,, - ]$INFO[Container(2550).ListItem.EndTime,, • ]$INFO[Container(2550).ListItem.Genre]</value>
	</variable>
	<variable name="2560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2560">
		<value condition="StringCompare(Container(2560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2560).ListItem.label] $INFO[Container(2560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.Title) + SubString(Container(2560).ListItem.FolderPath, pvr://)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.Season) + !IsEmpty(Container(2560).ListItem.Episode) + !StringCompare(Container(2560).ListItem.TvShowTitle,Container(2560).ListItem.Title)">[UPPERCASE]S$INFO[Container(2560).ListItem.Season]E$INFO[Container(2560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.Title)">$INFO[Container(2560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.Label)">$INFO[Container(2560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2560">
		<value condition="!IsEmpty(Container(2560).ListItem.TvShowTitle) + !IsEmpty(Container(2560).ListItem.Genre)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.TvShowTitle)">$INFO[Container(2560).ListItem.TvShowTitle,, • ]$INFO[Container(2560).ListItem.Premiered,, • ]$INFO[Container(2560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.Year)">$INFO[Container(2560).ListItem.Year,, • ]$INFO[Container(2560).ListItem.Duration,,min. • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.Artist) + !IsEmpty(Container(2560).ListItem.Album)">$INFO[Container(2560).ListItem.Artist,, • ]$INFO[Container(2560).ListItem.Album,, • ]$INFO[Container(2560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.Property(StartTime))">$INFO[Container(2560).ListItem.Property(ChannelName),, • ]$INFO[Container(2560).ListItem.Property(StartTime),, - ]$INFO[Container(2560).ListItem.Property(EndTime),, • ]$INFO[Container(2560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2560).ListItem.StartTime)">$INFO[Container(2560).ListItem.ChannelName,, • ]$INFO[Container(2560).ListItem.StartTime,, - ]$INFO[Container(2560).ListItem.EndTime,, • ]$INFO[Container(2560).ListItem.Genre]</value>
	</variable>
	<variable name="2570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2570">
		<value condition="StringCompare(Container(2570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2570).ListItem.label] $INFO[Container(2570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.Title) + SubString(Container(2570).ListItem.FolderPath, pvr://)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.Season) + !IsEmpty(Container(2570).ListItem.Episode) + !StringCompare(Container(2570).ListItem.TvShowTitle,Container(2570).ListItem.Title)">[UPPERCASE]S$INFO[Container(2570).ListItem.Season]E$INFO[Container(2570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.Title)">$INFO[Container(2570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.Label)">$INFO[Container(2570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2570">
		<value condition="!IsEmpty(Container(2570).ListItem.TvShowTitle) + !IsEmpty(Container(2570).ListItem.Genre)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.TvShowTitle)">$INFO[Container(2570).ListItem.TvShowTitle,, • ]$INFO[Container(2570).ListItem.Premiered,, • ]$INFO[Container(2570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.Year)">$INFO[Container(2570).ListItem.Year,, • ]$INFO[Container(2570).ListItem.Duration,,min. • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.Artist) + !IsEmpty(Container(2570).ListItem.Album)">$INFO[Container(2570).ListItem.Artist,, • ]$INFO[Container(2570).ListItem.Album,, • ]$INFO[Container(2570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.Property(StartTime))">$INFO[Container(2570).ListItem.Property(ChannelName),, • ]$INFO[Container(2570).ListItem.Property(StartTime),, - ]$INFO[Container(2570).ListItem.Property(EndTime),, • ]$INFO[Container(2570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2570).ListItem.StartTime)">$INFO[Container(2570).ListItem.ChannelName,, • ]$INFO[Container(2570).ListItem.StartTime,, - ]$INFO[Container(2570).ListItem.EndTime,, • ]$INFO[Container(2570).ListItem.Genre]</value>
	</variable>
	<variable name="2580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-2580">
		<value condition="StringCompare(Container(2580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(2580).ListItem.label] $INFO[Container(2580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.Title) + SubString(Container(2580).ListItem.FolderPath, pvr://)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.Season) + !IsEmpty(Container(2580).ListItem.Episode) + !StringCompare(Container(2580).ListItem.TvShowTitle,Container(2580).ListItem.Title)">[UPPERCASE]S$INFO[Container(2580).ListItem.Season]E$INFO[Container(2580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(2580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.Title)">$INFO[Container(2580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.Label)">$INFO[Container(2580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-2580">
		<value condition="!IsEmpty(Container(2580).ListItem.TvShowTitle) + !IsEmpty(Container(2580).ListItem.Genre)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.TvShowTitle)">$INFO[Container(2580).ListItem.TvShowTitle,, • ]$INFO[Container(2580).ListItem.Premiered,, • ]$INFO[Container(2580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.Year)">$INFO[Container(2580).ListItem.Year,, • ]$INFO[Container(2580).ListItem.Duration,,min. • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.Artist) + !IsEmpty(Container(2580).ListItem.Album)">$INFO[Container(2580).ListItem.Artist,, • ]$INFO[Container(2580).ListItem.Album,, • ]$INFO[Container(2580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.Property(StartTime))">$INFO[Container(2580).ListItem.Property(ChannelName),, • ]$INFO[Container(2580).ListItem.Property(StartTime),, - ]$INFO[Container(2580).ListItem.Property(EndTime),, • ]$INFO[Container(2580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(2580).ListItem.StartTime)">$INFO[Container(2580).ListItem.ChannelName,, • ]$INFO[Container(2580).ListItem.StartTime,, - ]$INFO[Container(2580).ListItem.EndTime,, • ]$INFO[Container(2580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-2">
		<value condition="Skin.String(widgetvalue-series,7)" />
		<value condition="Skin.String(widgetvalue-series,6)" />
		<value condition="Skin.String(widgetvalue-series,5)" />
		<value condition="Skin.String(widgetvalue-series,4)" />
		<value condition="Skin.String(widgetvalue-series,3)" />
		<value condition="Skin.String(widgetvalue-series,2)" />
		<value condition="Skin.String(widgetvalue-series,1)" />
		<value>Series</value>
	</variable>
	<variable name="3510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.video.adryanlist/?url=http%3A%2F%2Fadryanlist.org%2Fadryan%2Ftotalp.xml&amp;mode=1&amp;name=%5BCOLOR+lime%5D%E2%80%A2%5B%2FCOLOR%5D%5BCOLOR+deepskyblue%5D++TotalPlay+%5B%2FCOLOR%5D+%5BCOLOR+lightgreen%5D+%5B%2FCOLOR%5D++&amp;fanart=http%3A%2F%2Fadryanlist.org%2Fadryan%2Fimg%2Ffanart.jpg&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-3510">
		<value condition="StringCompare(Container(3510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3510).ListItem.label] $INFO[Container(3510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.Title) + SubString(Container(3510).ListItem.FolderPath, pvr://)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.Season) + !IsEmpty(Container(3510).ListItem.Episode) + !StringCompare(Container(3510).ListItem.TvShowTitle,Container(3510).ListItem.Title)">[UPPERCASE]S$INFO[Container(3510).ListItem.Season]E$INFO[Container(3510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.Title)">$INFO[Container(3510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.Label)">$INFO[Container(3510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3510">
		<value condition="!IsEmpty(Container(3510).ListItem.TvShowTitle) + !IsEmpty(Container(3510).ListItem.Genre)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.TvShowTitle)">$INFO[Container(3510).ListItem.TvShowTitle,, • ]$INFO[Container(3510).ListItem.Premiered,, • ]$INFO[Container(3510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.Year)">$INFO[Container(3510).ListItem.Year,, • ]$INFO[Container(3510).ListItem.Duration,,min. • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.Artist) + !IsEmpty(Container(3510).ListItem.Album)">$INFO[Container(3510).ListItem.Artist,, • ]$INFO[Container(3510).ListItem.Album,, • ]$INFO[Container(3510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.Property(StartTime))">$INFO[Container(3510).ListItem.Property(ChannelName),, • ]$INFO[Container(3510).ListItem.Property(StartTime),, - ]$INFO[Container(3510).ListItem.Property(EndTime),, • ]$INFO[Container(3510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3510).ListItem.StartTime)">$INFO[Container(3510).ListItem.ChannelName,, • ]$INFO[Container(3510).ListItem.StartTime,, - ]$INFO[Container(3510).ListItem.EndTime,, • ]$INFO[Container(3510).ListItem.Genre]</value>
	</variable>
	<variable name="3520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3520">
		<value condition="StringCompare(Container(3520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3520).ListItem.label] $INFO[Container(3520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.Title) + SubString(Container(3520).ListItem.FolderPath, pvr://)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.Season) + !IsEmpty(Container(3520).ListItem.Episode) + !StringCompare(Container(3520).ListItem.TvShowTitle,Container(3520).ListItem.Title)">[UPPERCASE]S$INFO[Container(3520).ListItem.Season]E$INFO[Container(3520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.Title)">$INFO[Container(3520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.Label)">$INFO[Container(3520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3520">
		<value condition="!IsEmpty(Container(3520).ListItem.TvShowTitle) + !IsEmpty(Container(3520).ListItem.Genre)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.TvShowTitle)">$INFO[Container(3520).ListItem.TvShowTitle,, • ]$INFO[Container(3520).ListItem.Premiered,, • ]$INFO[Container(3520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.Year)">$INFO[Container(3520).ListItem.Year,, • ]$INFO[Container(3520).ListItem.Duration,,min. • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.Artist) + !IsEmpty(Container(3520).ListItem.Album)">$INFO[Container(3520).ListItem.Artist,, • ]$INFO[Container(3520).ListItem.Album,, • ]$INFO[Container(3520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.Property(StartTime))">$INFO[Container(3520).ListItem.Property(ChannelName),, • ]$INFO[Container(3520).ListItem.Property(StartTime),, - ]$INFO[Container(3520).ListItem.Property(EndTime),, • ]$INFO[Container(3520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3520).ListItem.StartTime)">$INFO[Container(3520).ListItem.ChannelName,, • ]$INFO[Container(3520).ListItem.StartTime,, - ]$INFO[Container(3520).ListItem.EndTime,, • ]$INFO[Container(3520).ListItem.Genre]</value>
	</variable>
	<variable name="3530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3530">
		<value condition="StringCompare(Container(3530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3530).ListItem.label] $INFO[Container(3530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.Title) + SubString(Container(3530).ListItem.FolderPath, pvr://)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.Season) + !IsEmpty(Container(3530).ListItem.Episode) + !StringCompare(Container(3530).ListItem.TvShowTitle,Container(3530).ListItem.Title)">[UPPERCASE]S$INFO[Container(3530).ListItem.Season]E$INFO[Container(3530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.Title)">$INFO[Container(3530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.Label)">$INFO[Container(3530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3530">
		<value condition="!IsEmpty(Container(3530).ListItem.TvShowTitle) + !IsEmpty(Container(3530).ListItem.Genre)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.TvShowTitle)">$INFO[Container(3530).ListItem.TvShowTitle,, • ]$INFO[Container(3530).ListItem.Premiered,, • ]$INFO[Container(3530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.Year)">$INFO[Container(3530).ListItem.Year,, • ]$INFO[Container(3530).ListItem.Duration,,min. • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.Artist) + !IsEmpty(Container(3530).ListItem.Album)">$INFO[Container(3530).ListItem.Artist,, • ]$INFO[Container(3530).ListItem.Album,, • ]$INFO[Container(3530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.Property(StartTime))">$INFO[Container(3530).ListItem.Property(ChannelName),, • ]$INFO[Container(3530).ListItem.Property(StartTime),, - ]$INFO[Container(3530).ListItem.Property(EndTime),, • ]$INFO[Container(3530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3530).ListItem.StartTime)">$INFO[Container(3530).ListItem.ChannelName,, • ]$INFO[Container(3530).ListItem.StartTime,, - ]$INFO[Container(3530).ListItem.EndTime,, • ]$INFO[Container(3530).ListItem.Genre]</value>
	</variable>
	<variable name="3540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3540">
		<value condition="StringCompare(Container(3540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3540).ListItem.label] $INFO[Container(3540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.Title) + SubString(Container(3540).ListItem.FolderPath, pvr://)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.Season) + !IsEmpty(Container(3540).ListItem.Episode) + !StringCompare(Container(3540).ListItem.TvShowTitle,Container(3540).ListItem.Title)">[UPPERCASE]S$INFO[Container(3540).ListItem.Season]E$INFO[Container(3540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.Title)">$INFO[Container(3540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.Label)">$INFO[Container(3540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3540">
		<value condition="!IsEmpty(Container(3540).ListItem.TvShowTitle) + !IsEmpty(Container(3540).ListItem.Genre)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.TvShowTitle)">$INFO[Container(3540).ListItem.TvShowTitle,, • ]$INFO[Container(3540).ListItem.Premiered,, • ]$INFO[Container(3540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.Year)">$INFO[Container(3540).ListItem.Year,, • ]$INFO[Container(3540).ListItem.Duration,,min. • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.Artist) + !IsEmpty(Container(3540).ListItem.Album)">$INFO[Container(3540).ListItem.Artist,, • ]$INFO[Container(3540).ListItem.Album,, • ]$INFO[Container(3540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.Property(StartTime))">$INFO[Container(3540).ListItem.Property(ChannelName),, • ]$INFO[Container(3540).ListItem.Property(StartTime),, - ]$INFO[Container(3540).ListItem.Property(EndTime),, • ]$INFO[Container(3540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3540).ListItem.StartTime)">$INFO[Container(3540).ListItem.ChannelName,, • ]$INFO[Container(3540).ListItem.StartTime,, - ]$INFO[Container(3540).ListItem.EndTime,, • ]$INFO[Container(3540).ListItem.Genre]</value>
	</variable>
	<variable name="3550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3550">
		<value condition="StringCompare(Container(3550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3550).ListItem.label] $INFO[Container(3550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.Title) + SubString(Container(3550).ListItem.FolderPath, pvr://)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.Season) + !IsEmpty(Container(3550).ListItem.Episode) + !StringCompare(Container(3550).ListItem.TvShowTitle,Container(3550).ListItem.Title)">[UPPERCASE]S$INFO[Container(3550).ListItem.Season]E$INFO[Container(3550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.Title)">$INFO[Container(3550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.Label)">$INFO[Container(3550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3550">
		<value condition="!IsEmpty(Container(3550).ListItem.TvShowTitle) + !IsEmpty(Container(3550).ListItem.Genre)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.TvShowTitle)">$INFO[Container(3550).ListItem.TvShowTitle,, • ]$INFO[Container(3550).ListItem.Premiered,, • ]$INFO[Container(3550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.Year)">$INFO[Container(3550).ListItem.Year,, • ]$INFO[Container(3550).ListItem.Duration,,min. • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.Artist) + !IsEmpty(Container(3550).ListItem.Album)">$INFO[Container(3550).ListItem.Artist,, • ]$INFO[Container(3550).ListItem.Album,, • ]$INFO[Container(3550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.Property(StartTime))">$INFO[Container(3550).ListItem.Property(ChannelName),, • ]$INFO[Container(3550).ListItem.Property(StartTime),, - ]$INFO[Container(3550).ListItem.Property(EndTime),, • ]$INFO[Container(3550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3550).ListItem.StartTime)">$INFO[Container(3550).ListItem.ChannelName,, • ]$INFO[Container(3550).ListItem.StartTime,, - ]$INFO[Container(3550).ListItem.EndTime,, • ]$INFO[Container(3550).ListItem.Genre]</value>
	</variable>
	<variable name="3560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3560">
		<value condition="StringCompare(Container(3560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3560).ListItem.label] $INFO[Container(3560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.Title) + SubString(Container(3560).ListItem.FolderPath, pvr://)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.Season) + !IsEmpty(Container(3560).ListItem.Episode) + !StringCompare(Container(3560).ListItem.TvShowTitle,Container(3560).ListItem.Title)">[UPPERCASE]S$INFO[Container(3560).ListItem.Season]E$INFO[Container(3560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.Title)">$INFO[Container(3560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.Label)">$INFO[Container(3560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3560">
		<value condition="!IsEmpty(Container(3560).ListItem.TvShowTitle) + !IsEmpty(Container(3560).ListItem.Genre)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.TvShowTitle)">$INFO[Container(3560).ListItem.TvShowTitle,, • ]$INFO[Container(3560).ListItem.Premiered,, • ]$INFO[Container(3560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.Year)">$INFO[Container(3560).ListItem.Year,, • ]$INFO[Container(3560).ListItem.Duration,,min. • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.Artist) + !IsEmpty(Container(3560).ListItem.Album)">$INFO[Container(3560).ListItem.Artist,, • ]$INFO[Container(3560).ListItem.Album,, • ]$INFO[Container(3560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.Property(StartTime))">$INFO[Container(3560).ListItem.Property(ChannelName),, • ]$INFO[Container(3560).ListItem.Property(StartTime),, - ]$INFO[Container(3560).ListItem.Property(EndTime),, • ]$INFO[Container(3560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3560).ListItem.StartTime)">$INFO[Container(3560).ListItem.ChannelName,, • ]$INFO[Container(3560).ListItem.StartTime,, - ]$INFO[Container(3560).ListItem.EndTime,, • ]$INFO[Container(3560).ListItem.Genre]</value>
	</variable>
	<variable name="3570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3570">
		<value condition="StringCompare(Container(3570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3570).ListItem.label] $INFO[Container(3570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.Title) + SubString(Container(3570).ListItem.FolderPath, pvr://)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.Season) + !IsEmpty(Container(3570).ListItem.Episode) + !StringCompare(Container(3570).ListItem.TvShowTitle,Container(3570).ListItem.Title)">[UPPERCASE]S$INFO[Container(3570).ListItem.Season]E$INFO[Container(3570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.Title)">$INFO[Container(3570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.Label)">$INFO[Container(3570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3570">
		<value condition="!IsEmpty(Container(3570).ListItem.TvShowTitle) + !IsEmpty(Container(3570).ListItem.Genre)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.TvShowTitle)">$INFO[Container(3570).ListItem.TvShowTitle,, • ]$INFO[Container(3570).ListItem.Premiered,, • ]$INFO[Container(3570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.Year)">$INFO[Container(3570).ListItem.Year,, • ]$INFO[Container(3570).ListItem.Duration,,min. • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.Artist) + !IsEmpty(Container(3570).ListItem.Album)">$INFO[Container(3570).ListItem.Artist,, • ]$INFO[Container(3570).ListItem.Album,, • ]$INFO[Container(3570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.Property(StartTime))">$INFO[Container(3570).ListItem.Property(ChannelName),, • ]$INFO[Container(3570).ListItem.Property(StartTime),, - ]$INFO[Container(3570).ListItem.Property(EndTime),, • ]$INFO[Container(3570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3570).ListItem.StartTime)">$INFO[Container(3570).ListItem.ChannelName,, • ]$INFO[Container(3570).ListItem.StartTime,, - ]$INFO[Container(3570).ListItem.EndTime,, • ]$INFO[Container(3570).ListItem.Genre]</value>
	</variable>
	<variable name="3580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-3580">
		<value condition="StringCompare(Container(3580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(3580).ListItem.label] $INFO[Container(3580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.Title) + SubString(Container(3580).ListItem.FolderPath, pvr://)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.Season) + !IsEmpty(Container(3580).ListItem.Episode) + !StringCompare(Container(3580).ListItem.TvShowTitle,Container(3580).ListItem.Title)">[UPPERCASE]S$INFO[Container(3580).ListItem.Season]E$INFO[Container(3580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(3580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.Title)">$INFO[Container(3580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.Label)">$INFO[Container(3580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-3580">
		<value condition="!IsEmpty(Container(3580).ListItem.TvShowTitle) + !IsEmpty(Container(3580).ListItem.Genre)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.TvShowTitle)">$INFO[Container(3580).ListItem.TvShowTitle,, • ]$INFO[Container(3580).ListItem.Premiered,, • ]$INFO[Container(3580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.Year)">$INFO[Container(3580).ListItem.Year,, • ]$INFO[Container(3580).ListItem.Duration,,min. • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.Artist) + !IsEmpty(Container(3580).ListItem.Album)">$INFO[Container(3580).ListItem.Artist,, • ]$INFO[Container(3580).ListItem.Album,, • ]$INFO[Container(3580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.Property(StartTime))">$INFO[Container(3580).ListItem.Property(ChannelName),, • ]$INFO[Container(3580).ListItem.Property(StartTime),, - ]$INFO[Container(3580).ListItem.Property(EndTime),, • ]$INFO[Container(3580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(3580).ListItem.StartTime)">$INFO[Container(3580).ListItem.ChannelName,, • ]$INFO[Container(3580).ListItem.StartTime,, - ]$INFO[Container(3580).ListItem.EndTime,, • ]$INFO[Container(3580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-3">
		<value condition="Skin.String(widgetvalue-livetv,7)" />
		<value condition="Skin.String(widgetvalue-livetv,6)" />
		<value condition="Skin.String(widgetvalue-livetv,5)" />
		<value condition="Skin.String(widgetvalue-livetv,4)" />
		<value condition="Skin.String(widgetvalue-livetv,3)" />
		<value condition="Skin.String(widgetvalue-livetv,2)" />
		<value condition="Skin.String(widgetvalue-livetv,1)" />
		<value>Total Play</value>
	</variable>
	<variable name="4510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.program.chrome.launcher?reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-4510">
		<value condition="StringCompare(Container(4510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4510).ListItem.label] $INFO[Container(4510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Title) + SubString(Container(4510).ListItem.FolderPath, pvr://)">$INFO[Container(4510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Season) + !IsEmpty(Container(4510).ListItem.Episode) + !StringCompare(Container(4510).ListItem.TvShowTitle,Container(4510).ListItem.Title)">[UPPERCASE]S$INFO[Container(4510).ListItem.Season]E$INFO[Container(4510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Title)">$INFO[Container(4510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Label)">$INFO[Container(4510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4510">
		<value condition="!IsEmpty(Container(4510).ListItem.TvShowTitle) + !IsEmpty(Container(4510).ListItem.Genre)">$INFO[Container(4510).ListItem.TvShowTitle,, • ]$INFO[Container(4510).ListItem.Year,, • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.TvShowTitle)">$INFO[Container(4510).ListItem.TvShowTitle,, • ]$INFO[Container(4510).ListItem.Premiered,, • ]$INFO[Container(4510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Year)">$INFO[Container(4510).ListItem.Year,, • ]$INFO[Container(4510).ListItem.Duration,,min. • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Artist) + !IsEmpty(Container(4510).ListItem.Album)">$INFO[Container(4510).ListItem.Artist,, • ]$INFO[Container(4510).ListItem.Album,, • ]$INFO[Container(4510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.Property(StartTime))">$INFO[Container(4510).ListItem.Property(ChannelName),, • ]$INFO[Container(4510).ListItem.Property(StartTime),, - ]$INFO[Container(4510).ListItem.Property(EndTime),, • ]$INFO[Container(4510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4510).ListItem.StartTime)">$INFO[Container(4510).ListItem.ChannelName,, • ]$INFO[Container(4510).ListItem.StartTime,, - ]$INFO[Container(4510).ListItem.EndTime,, • ]$INFO[Container(4510).ListItem.Genre]</value>
	</variable>
	<variable name="4520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4520">
		<value condition="StringCompare(Container(4520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4520).ListItem.label] $INFO[Container(4520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Title) + SubString(Container(4520).ListItem.FolderPath, pvr://)">$INFO[Container(4520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Season) + !IsEmpty(Container(4520).ListItem.Episode) + !StringCompare(Container(4520).ListItem.TvShowTitle,Container(4520).ListItem.Title)">[UPPERCASE]S$INFO[Container(4520).ListItem.Season]E$INFO[Container(4520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Title)">$INFO[Container(4520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Label)">$INFO[Container(4520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4520">
		<value condition="!IsEmpty(Container(4520).ListItem.TvShowTitle) + !IsEmpty(Container(4520).ListItem.Genre)">$INFO[Container(4520).ListItem.TvShowTitle,, • ]$INFO[Container(4520).ListItem.Year,, • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.TvShowTitle)">$INFO[Container(4520).ListItem.TvShowTitle,, • ]$INFO[Container(4520).ListItem.Premiered,, • ]$INFO[Container(4520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Year)">$INFO[Container(4520).ListItem.Year,, • ]$INFO[Container(4520).ListItem.Duration,,min. • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Artist) + !IsEmpty(Container(4520).ListItem.Album)">$INFO[Container(4520).ListItem.Artist,, • ]$INFO[Container(4520).ListItem.Album,, • ]$INFO[Container(4520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.Property(StartTime))">$INFO[Container(4520).ListItem.Property(ChannelName),, • ]$INFO[Container(4520).ListItem.Property(StartTime),, - ]$INFO[Container(4520).ListItem.Property(EndTime),, • ]$INFO[Container(4520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4520).ListItem.StartTime)">$INFO[Container(4520).ListItem.ChannelName,, • ]$INFO[Container(4520).ListItem.StartTime,, - ]$INFO[Container(4520).ListItem.EndTime,, • ]$INFO[Container(4520).ListItem.Genre]</value>
	</variable>
	<variable name="4530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4530">
		<value condition="StringCompare(Container(4530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4530).ListItem.label] $INFO[Container(4530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Title) + SubString(Container(4530).ListItem.FolderPath, pvr://)">$INFO[Container(4530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Season) + !IsEmpty(Container(4530).ListItem.Episode) + !StringCompare(Container(4530).ListItem.TvShowTitle,Container(4530).ListItem.Title)">[UPPERCASE]S$INFO[Container(4530).ListItem.Season]E$INFO[Container(4530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Title)">$INFO[Container(4530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Label)">$INFO[Container(4530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4530">
		<value condition="!IsEmpty(Container(4530).ListItem.TvShowTitle) + !IsEmpty(Container(4530).ListItem.Genre)">$INFO[Container(4530).ListItem.TvShowTitle,, • ]$INFO[Container(4530).ListItem.Year,, • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.TvShowTitle)">$INFO[Container(4530).ListItem.TvShowTitle,, • ]$INFO[Container(4530).ListItem.Premiered,, • ]$INFO[Container(4530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Year)">$INFO[Container(4530).ListItem.Year,, • ]$INFO[Container(4530).ListItem.Duration,,min. • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Artist) + !IsEmpty(Container(4530).ListItem.Album)">$INFO[Container(4530).ListItem.Artist,, • ]$INFO[Container(4530).ListItem.Album,, • ]$INFO[Container(4530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.Property(StartTime))">$INFO[Container(4530).ListItem.Property(ChannelName),, • ]$INFO[Container(4530).ListItem.Property(StartTime),, - ]$INFO[Container(4530).ListItem.Property(EndTime),, • ]$INFO[Container(4530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4530).ListItem.StartTime)">$INFO[Container(4530).ListItem.ChannelName,, • ]$INFO[Container(4530).ListItem.StartTime,, - ]$INFO[Container(4530).ListItem.EndTime,, • ]$INFO[Container(4530).ListItem.Genre]</value>
	</variable>
	<variable name="4540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4540">
		<value condition="StringCompare(Container(4540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4540).ListItem.label] $INFO[Container(4540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Title) + SubString(Container(4540).ListItem.FolderPath, pvr://)">$INFO[Container(4540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Season) + !IsEmpty(Container(4540).ListItem.Episode) + !StringCompare(Container(4540).ListItem.TvShowTitle,Container(4540).ListItem.Title)">[UPPERCASE]S$INFO[Container(4540).ListItem.Season]E$INFO[Container(4540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Title)">$INFO[Container(4540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Label)">$INFO[Container(4540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4540">
		<value condition="!IsEmpty(Container(4540).ListItem.TvShowTitle) + !IsEmpty(Container(4540).ListItem.Genre)">$INFO[Container(4540).ListItem.TvShowTitle,, • ]$INFO[Container(4540).ListItem.Year,, • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.TvShowTitle)">$INFO[Container(4540).ListItem.TvShowTitle,, • ]$INFO[Container(4540).ListItem.Premiered,, • ]$INFO[Container(4540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Year)">$INFO[Container(4540).ListItem.Year,, • ]$INFO[Container(4540).ListItem.Duration,,min. • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Artist) + !IsEmpty(Container(4540).ListItem.Album)">$INFO[Container(4540).ListItem.Artist,, • ]$INFO[Container(4540).ListItem.Album,, • ]$INFO[Container(4540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.Property(StartTime))">$INFO[Container(4540).ListItem.Property(ChannelName),, • ]$INFO[Container(4540).ListItem.Property(StartTime),, - ]$INFO[Container(4540).ListItem.Property(EndTime),, • ]$INFO[Container(4540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4540).ListItem.StartTime)">$INFO[Container(4540).ListItem.ChannelName,, • ]$INFO[Container(4540).ListItem.StartTime,, - ]$INFO[Container(4540).ListItem.EndTime,, • ]$INFO[Container(4540).ListItem.Genre]</value>
	</variable>
	<variable name="4550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4550">
		<value condition="StringCompare(Container(4550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4550).ListItem.label] $INFO[Container(4550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Title) + SubString(Container(4550).ListItem.FolderPath, pvr://)">$INFO[Container(4550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Season) + !IsEmpty(Container(4550).ListItem.Episode) + !StringCompare(Container(4550).ListItem.TvShowTitle,Container(4550).ListItem.Title)">[UPPERCASE]S$INFO[Container(4550).ListItem.Season]E$INFO[Container(4550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Title)">$INFO[Container(4550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Label)">$INFO[Container(4550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4550">
		<value condition="!IsEmpty(Container(4550).ListItem.TvShowTitle) + !IsEmpty(Container(4550).ListItem.Genre)">$INFO[Container(4550).ListItem.TvShowTitle,, • ]$INFO[Container(4550).ListItem.Year,, • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.TvShowTitle)">$INFO[Container(4550).ListItem.TvShowTitle,, • ]$INFO[Container(4550).ListItem.Premiered,, • ]$INFO[Container(4550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Year)">$INFO[Container(4550).ListItem.Year,, • ]$INFO[Container(4550).ListItem.Duration,,min. • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Artist) + !IsEmpty(Container(4550).ListItem.Album)">$INFO[Container(4550).ListItem.Artist,, • ]$INFO[Container(4550).ListItem.Album,, • ]$INFO[Container(4550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.Property(StartTime))">$INFO[Container(4550).ListItem.Property(ChannelName),, • ]$INFO[Container(4550).ListItem.Property(StartTime),, - ]$INFO[Container(4550).ListItem.Property(EndTime),, • ]$INFO[Container(4550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4550).ListItem.StartTime)">$INFO[Container(4550).ListItem.ChannelName,, • ]$INFO[Container(4550).ListItem.StartTime,, - ]$INFO[Container(4550).ListItem.EndTime,, • ]$INFO[Container(4550).ListItem.Genre]</value>
	</variable>
	<variable name="4560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4560">
		<value condition="StringCompare(Container(4560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4560).ListItem.label] $INFO[Container(4560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Title) + SubString(Container(4560).ListItem.FolderPath, pvr://)">$INFO[Container(4560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Season) + !IsEmpty(Container(4560).ListItem.Episode) + !StringCompare(Container(4560).ListItem.TvShowTitle,Container(4560).ListItem.Title)">[UPPERCASE]S$INFO[Container(4560).ListItem.Season]E$INFO[Container(4560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Title)">$INFO[Container(4560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Label)">$INFO[Container(4560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4560">
		<value condition="!IsEmpty(Container(4560).ListItem.TvShowTitle) + !IsEmpty(Container(4560).ListItem.Genre)">$INFO[Container(4560).ListItem.TvShowTitle,, • ]$INFO[Container(4560).ListItem.Year,, • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.TvShowTitle)">$INFO[Container(4560).ListItem.TvShowTitle,, • ]$INFO[Container(4560).ListItem.Premiered,, • ]$INFO[Container(4560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Year)">$INFO[Container(4560).ListItem.Year,, • ]$INFO[Container(4560).ListItem.Duration,,min. • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Artist) + !IsEmpty(Container(4560).ListItem.Album)">$INFO[Container(4560).ListItem.Artist,, • ]$INFO[Container(4560).ListItem.Album,, • ]$INFO[Container(4560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.Property(StartTime))">$INFO[Container(4560).ListItem.Property(ChannelName),, • ]$INFO[Container(4560).ListItem.Property(StartTime),, - ]$INFO[Container(4560).ListItem.Property(EndTime),, • ]$INFO[Container(4560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4560).ListItem.StartTime)">$INFO[Container(4560).ListItem.ChannelName,, • ]$INFO[Container(4560).ListItem.StartTime,, - ]$INFO[Container(4560).ListItem.EndTime,, • ]$INFO[Container(4560).ListItem.Genre]</value>
	</variable>
	<variable name="4570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4570">
		<value condition="StringCompare(Container(4570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4570).ListItem.label] $INFO[Container(4570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Title) + SubString(Container(4570).ListItem.FolderPath, pvr://)">$INFO[Container(4570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Season) + !IsEmpty(Container(4570).ListItem.Episode) + !StringCompare(Container(4570).ListItem.TvShowTitle,Container(4570).ListItem.Title)">[UPPERCASE]S$INFO[Container(4570).ListItem.Season]E$INFO[Container(4570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Title)">$INFO[Container(4570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Label)">$INFO[Container(4570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4570">
		<value condition="!IsEmpty(Container(4570).ListItem.TvShowTitle) + !IsEmpty(Container(4570).ListItem.Genre)">$INFO[Container(4570).ListItem.TvShowTitle,, • ]$INFO[Container(4570).ListItem.Year,, • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.TvShowTitle)">$INFO[Container(4570).ListItem.TvShowTitle,, • ]$INFO[Container(4570).ListItem.Premiered,, • ]$INFO[Container(4570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Year)">$INFO[Container(4570).ListItem.Year,, • ]$INFO[Container(4570).ListItem.Duration,,min. • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Artist) + !IsEmpty(Container(4570).ListItem.Album)">$INFO[Container(4570).ListItem.Artist,, • ]$INFO[Container(4570).ListItem.Album,, • ]$INFO[Container(4570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.Property(StartTime))">$INFO[Container(4570).ListItem.Property(ChannelName),, • ]$INFO[Container(4570).ListItem.Property(StartTime),, - ]$INFO[Container(4570).ListItem.Property(EndTime),, • ]$INFO[Container(4570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4570).ListItem.StartTime)">$INFO[Container(4570).ListItem.ChannelName,, • ]$INFO[Container(4570).ListItem.StartTime,, - ]$INFO[Container(4570).ListItem.EndTime,, • ]$INFO[Container(4570).ListItem.Genre]</value>
	</variable>
	<variable name="4580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-4580">
		<value condition="StringCompare(Container(4580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(4580).ListItem.label] $INFO[Container(4580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Title) + SubString(Container(4580).ListItem.FolderPath, pvr://)">$INFO[Container(4580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Season) + !IsEmpty(Container(4580).ListItem.Episode) + !StringCompare(Container(4580).ListItem.TvShowTitle,Container(4580).ListItem.Title)">[UPPERCASE]S$INFO[Container(4580).ListItem.Season]E$INFO[Container(4580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(4580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Title)">$INFO[Container(4580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Label)">$INFO[Container(4580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-4580">
		<value condition="!IsEmpty(Container(4580).ListItem.TvShowTitle) + !IsEmpty(Container(4580).ListItem.Genre)">$INFO[Container(4580).ListItem.TvShowTitle,, • ]$INFO[Container(4580).ListItem.Year,, • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.TvShowTitle)">$INFO[Container(4580).ListItem.TvShowTitle,, • ]$INFO[Container(4580).ListItem.Premiered,, • ]$INFO[Container(4580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Year)">$INFO[Container(4580).ListItem.Year,, • ]$INFO[Container(4580).ListItem.Duration,,min. • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Artist) + !IsEmpty(Container(4580).ListItem.Album)">$INFO[Container(4580).ListItem.Artist,, • ]$INFO[Container(4580).ListItem.Album,, • ]$INFO[Container(4580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.Property(StartTime))">$INFO[Container(4580).ListItem.Property(ChannelName),, • ]$INFO[Container(4580).ListItem.Property(StartTime),, - ]$INFO[Container(4580).ListItem.Property(EndTime),, • ]$INFO[Container(4580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(4580).ListItem.StartTime)">$INFO[Container(4580).ListItem.ChannelName,, • ]$INFO[Container(4580).ListItem.StartTime,, - ]$INFO[Container(4580).ListItem.EndTime,, • ]$INFO[Container(4580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-4">
		<value condition="Skin.String(widgetvalue-netflix,7)" />
		<value condition="Skin.String(widgetvalue-netflix,6)" />
		<value condition="Skin.String(widgetvalue-netflix,5)" />
		<value condition="Skin.String(widgetvalue-netflix,4)" />
		<value condition="Skin.String(widgetvalue-netflix,3)" />
		<value condition="Skin.String(widgetvalue-netflix,2)" />
		<value condition="Skin.String(widgetvalue-netflix,1)" />
		<value>Streamin</value>
	</variable>
	<variable name="5510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5510">
		<value condition="StringCompare(Container(5510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5510).ListItem.label] $INFO[Container(5510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Title) + SubString(Container(5510).ListItem.FolderPath, pvr://)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Season) + !IsEmpty(Container(5510).ListItem.Episode) + !StringCompare(Container(5510).ListItem.TvShowTitle,Container(5510).ListItem.Title)">[UPPERCASE]S$INFO[Container(5510).ListItem.Season]E$INFO[Container(5510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Title)">$INFO[Container(5510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Label)">$INFO[Container(5510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5510">
		<value condition="!IsEmpty(Container(5510).ListItem.TvShowTitle) + !IsEmpty(Container(5510).ListItem.Genre)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.TvShowTitle)">$INFO[Container(5510).ListItem.TvShowTitle,, • ]$INFO[Container(5510).ListItem.Premiered,, • ]$INFO[Container(5510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Year)">$INFO[Container(5510).ListItem.Year,, • ]$INFO[Container(5510).ListItem.Duration,,min. • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Artist) + !IsEmpty(Container(5510).ListItem.Album)">$INFO[Container(5510).ListItem.Artist,, • ]$INFO[Container(5510).ListItem.Album,, • ]$INFO[Container(5510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.Property(StartTime))">$INFO[Container(5510).ListItem.Property(ChannelName),, • ]$INFO[Container(5510).ListItem.Property(StartTime),, - ]$INFO[Container(5510).ListItem.Property(EndTime),, • ]$INFO[Container(5510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5510).ListItem.StartTime)">$INFO[Container(5510).ListItem.ChannelName,, • ]$INFO[Container(5510).ListItem.StartTime,, - ]$INFO[Container(5510).ListItem.EndTime,, • ]$INFO[Container(5510).ListItem.Genre]</value>
	</variable>
	<variable name="5520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5520">
		<value condition="StringCompare(Container(5520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5520).ListItem.label] $INFO[Container(5520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Title) + SubString(Container(5520).ListItem.FolderPath, pvr://)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Season) + !IsEmpty(Container(5520).ListItem.Episode) + !StringCompare(Container(5520).ListItem.TvShowTitle,Container(5520).ListItem.Title)">[UPPERCASE]S$INFO[Container(5520).ListItem.Season]E$INFO[Container(5520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Title)">$INFO[Container(5520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Label)">$INFO[Container(5520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5520">
		<value condition="!IsEmpty(Container(5520).ListItem.TvShowTitle) + !IsEmpty(Container(5520).ListItem.Genre)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.TvShowTitle)">$INFO[Container(5520).ListItem.TvShowTitle,, • ]$INFO[Container(5520).ListItem.Premiered,, • ]$INFO[Container(5520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Year)">$INFO[Container(5520).ListItem.Year,, • ]$INFO[Container(5520).ListItem.Duration,,min. • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Artist) + !IsEmpty(Container(5520).ListItem.Album)">$INFO[Container(5520).ListItem.Artist,, • ]$INFO[Container(5520).ListItem.Album,, • ]$INFO[Container(5520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.Property(StartTime))">$INFO[Container(5520).ListItem.Property(ChannelName),, • ]$INFO[Container(5520).ListItem.Property(StartTime),, - ]$INFO[Container(5520).ListItem.Property(EndTime),, • ]$INFO[Container(5520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5520).ListItem.StartTime)">$INFO[Container(5520).ListItem.ChannelName,, • ]$INFO[Container(5520).ListItem.StartTime,, - ]$INFO[Container(5520).ListItem.EndTime,, • ]$INFO[Container(5520).ListItem.Genre]</value>
	</variable>
	<variable name="5530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5530">
		<value condition="StringCompare(Container(5530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5530).ListItem.label] $INFO[Container(5530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Title) + SubString(Container(5530).ListItem.FolderPath, pvr://)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Season) + !IsEmpty(Container(5530).ListItem.Episode) + !StringCompare(Container(5530).ListItem.TvShowTitle,Container(5530).ListItem.Title)">[UPPERCASE]S$INFO[Container(5530).ListItem.Season]E$INFO[Container(5530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Title)">$INFO[Container(5530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Label)">$INFO[Container(5530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5530">
		<value condition="!IsEmpty(Container(5530).ListItem.TvShowTitle) + !IsEmpty(Container(5530).ListItem.Genre)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.TvShowTitle)">$INFO[Container(5530).ListItem.TvShowTitle,, • ]$INFO[Container(5530).ListItem.Premiered,, • ]$INFO[Container(5530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Year)">$INFO[Container(5530).ListItem.Year,, • ]$INFO[Container(5530).ListItem.Duration,,min. • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Artist) + !IsEmpty(Container(5530).ListItem.Album)">$INFO[Container(5530).ListItem.Artist,, • ]$INFO[Container(5530).ListItem.Album,, • ]$INFO[Container(5530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.Property(StartTime))">$INFO[Container(5530).ListItem.Property(ChannelName),, • ]$INFO[Container(5530).ListItem.Property(StartTime),, - ]$INFO[Container(5530).ListItem.Property(EndTime),, • ]$INFO[Container(5530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5530).ListItem.StartTime)">$INFO[Container(5530).ListItem.ChannelName,, • ]$INFO[Container(5530).ListItem.StartTime,, - ]$INFO[Container(5530).ListItem.EndTime,, • ]$INFO[Container(5530).ListItem.Genre]</value>
	</variable>
	<variable name="5540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5540">
		<value condition="StringCompare(Container(5540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5540).ListItem.label] $INFO[Container(5540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Title) + SubString(Container(5540).ListItem.FolderPath, pvr://)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Season) + !IsEmpty(Container(5540).ListItem.Episode) + !StringCompare(Container(5540).ListItem.TvShowTitle,Container(5540).ListItem.Title)">[UPPERCASE]S$INFO[Container(5540).ListItem.Season]E$INFO[Container(5540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Title)">$INFO[Container(5540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Label)">$INFO[Container(5540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5540">
		<value condition="!IsEmpty(Container(5540).ListItem.TvShowTitle) + !IsEmpty(Container(5540).ListItem.Genre)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.TvShowTitle)">$INFO[Container(5540).ListItem.TvShowTitle,, • ]$INFO[Container(5540).ListItem.Premiered,, • ]$INFO[Container(5540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Year)">$INFO[Container(5540).ListItem.Year,, • ]$INFO[Container(5540).ListItem.Duration,,min. • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Artist) + !IsEmpty(Container(5540).ListItem.Album)">$INFO[Container(5540).ListItem.Artist,, • ]$INFO[Container(5540).ListItem.Album,, • ]$INFO[Container(5540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.Property(StartTime))">$INFO[Container(5540).ListItem.Property(ChannelName),, • ]$INFO[Container(5540).ListItem.Property(StartTime),, - ]$INFO[Container(5540).ListItem.Property(EndTime),, • ]$INFO[Container(5540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5540).ListItem.StartTime)">$INFO[Container(5540).ListItem.ChannelName,, • ]$INFO[Container(5540).ListItem.StartTime,, - ]$INFO[Container(5540).ListItem.EndTime,, • ]$INFO[Container(5540).ListItem.Genre]</value>
	</variable>
	<variable name="5550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5550">
		<value condition="StringCompare(Container(5550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5550).ListItem.label] $INFO[Container(5550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Title) + SubString(Container(5550).ListItem.FolderPath, pvr://)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Season) + !IsEmpty(Container(5550).ListItem.Episode) + !StringCompare(Container(5550).ListItem.TvShowTitle,Container(5550).ListItem.Title)">[UPPERCASE]S$INFO[Container(5550).ListItem.Season]E$INFO[Container(5550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Title)">$INFO[Container(5550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Label)">$INFO[Container(5550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5550">
		<value condition="!IsEmpty(Container(5550).ListItem.TvShowTitle) + !IsEmpty(Container(5550).ListItem.Genre)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.TvShowTitle)">$INFO[Container(5550).ListItem.TvShowTitle,, • ]$INFO[Container(5550).ListItem.Premiered,, • ]$INFO[Container(5550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Year)">$INFO[Container(5550).ListItem.Year,, • ]$INFO[Container(5550).ListItem.Duration,,min. • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Artist) + !IsEmpty(Container(5550).ListItem.Album)">$INFO[Container(5550).ListItem.Artist,, • ]$INFO[Container(5550).ListItem.Album,, • ]$INFO[Container(5550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.Property(StartTime))">$INFO[Container(5550).ListItem.Property(ChannelName),, • ]$INFO[Container(5550).ListItem.Property(StartTime),, - ]$INFO[Container(5550).ListItem.Property(EndTime),, • ]$INFO[Container(5550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5550).ListItem.StartTime)">$INFO[Container(5550).ListItem.ChannelName,, • ]$INFO[Container(5550).ListItem.StartTime,, - ]$INFO[Container(5550).ListItem.EndTime,, • ]$INFO[Container(5550).ListItem.Genre]</value>
	</variable>
	<variable name="5560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5560">
		<value condition="StringCompare(Container(5560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5560).ListItem.label] $INFO[Container(5560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Title) + SubString(Container(5560).ListItem.FolderPath, pvr://)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Season) + !IsEmpty(Container(5560).ListItem.Episode) + !StringCompare(Container(5560).ListItem.TvShowTitle,Container(5560).ListItem.Title)">[UPPERCASE]S$INFO[Container(5560).ListItem.Season]E$INFO[Container(5560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Title)">$INFO[Container(5560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Label)">$INFO[Container(5560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5560">
		<value condition="!IsEmpty(Container(5560).ListItem.TvShowTitle) + !IsEmpty(Container(5560).ListItem.Genre)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.TvShowTitle)">$INFO[Container(5560).ListItem.TvShowTitle,, • ]$INFO[Container(5560).ListItem.Premiered,, • ]$INFO[Container(5560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Year)">$INFO[Container(5560).ListItem.Year,, • ]$INFO[Container(5560).ListItem.Duration,,min. • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Artist) + !IsEmpty(Container(5560).ListItem.Album)">$INFO[Container(5560).ListItem.Artist,, • ]$INFO[Container(5560).ListItem.Album,, • ]$INFO[Container(5560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.Property(StartTime))">$INFO[Container(5560).ListItem.Property(ChannelName),, • ]$INFO[Container(5560).ListItem.Property(StartTime),, - ]$INFO[Container(5560).ListItem.Property(EndTime),, • ]$INFO[Container(5560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5560).ListItem.StartTime)">$INFO[Container(5560).ListItem.ChannelName,, • ]$INFO[Container(5560).ListItem.StartTime,, - ]$INFO[Container(5560).ListItem.EndTime,, • ]$INFO[Container(5560).ListItem.Genre]</value>
	</variable>
	<variable name="5570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5570">
		<value condition="StringCompare(Container(5570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5570).ListItem.label] $INFO[Container(5570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Title) + SubString(Container(5570).ListItem.FolderPath, pvr://)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Season) + !IsEmpty(Container(5570).ListItem.Episode) + !StringCompare(Container(5570).ListItem.TvShowTitle,Container(5570).ListItem.Title)">[UPPERCASE]S$INFO[Container(5570).ListItem.Season]E$INFO[Container(5570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Title)">$INFO[Container(5570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Label)">$INFO[Container(5570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5570">
		<value condition="!IsEmpty(Container(5570).ListItem.TvShowTitle) + !IsEmpty(Container(5570).ListItem.Genre)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.TvShowTitle)">$INFO[Container(5570).ListItem.TvShowTitle,, • ]$INFO[Container(5570).ListItem.Premiered,, • ]$INFO[Container(5570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Year)">$INFO[Container(5570).ListItem.Year,, • ]$INFO[Container(5570).ListItem.Duration,,min. • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Artist) + !IsEmpty(Container(5570).ListItem.Album)">$INFO[Container(5570).ListItem.Artist,, • ]$INFO[Container(5570).ListItem.Album,, • ]$INFO[Container(5570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.Property(StartTime))">$INFO[Container(5570).ListItem.Property(ChannelName),, • ]$INFO[Container(5570).ListItem.Property(StartTime),, - ]$INFO[Container(5570).ListItem.Property(EndTime),, • ]$INFO[Container(5570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5570).ListItem.StartTime)">$INFO[Container(5570).ListItem.ChannelName,, • ]$INFO[Container(5570).ListItem.StartTime,, - ]$INFO[Container(5570).ListItem.EndTime,, • ]$INFO[Container(5570).ListItem.Genre]</value>
	</variable>
	<variable name="5580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-5580">
		<value condition="StringCompare(Container(5580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(5580).ListItem.label] $INFO[Container(5580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Title) + SubString(Container(5580).ListItem.FolderPath, pvr://)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Season) + !IsEmpty(Container(5580).ListItem.Episode) + !StringCompare(Container(5580).ListItem.TvShowTitle,Container(5580).ListItem.Title)">[UPPERCASE]S$INFO[Container(5580).ListItem.Season]E$INFO[Container(5580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(5580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Title)">$INFO[Container(5580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Label)">$INFO[Container(5580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-5580">
		<value condition="!IsEmpty(Container(5580).ListItem.TvShowTitle) + !IsEmpty(Container(5580).ListItem.Genre)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.TvShowTitle)">$INFO[Container(5580).ListItem.TvShowTitle,, • ]$INFO[Container(5580).ListItem.Premiered,, • ]$INFO[Container(5580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Year)">$INFO[Container(5580).ListItem.Year,, • ]$INFO[Container(5580).ListItem.Duration,,min. • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Artist) + !IsEmpty(Container(5580).ListItem.Album)">$INFO[Container(5580).ListItem.Artist,, • ]$INFO[Container(5580).ListItem.Album,, • ]$INFO[Container(5580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.Property(StartTime))">$INFO[Container(5580).ListItem.Property(ChannelName),, • ]$INFO[Container(5580).ListItem.Property(StartTime),, - ]$INFO[Container(5580).ListItem.Property(EndTime),, • ]$INFO[Container(5580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(5580).ListItem.StartTime)">$INFO[Container(5580).ListItem.ChannelName,, • ]$INFO[Container(5580).ListItem.StartTime,, - ]$INFO[Container(5580).ListItem.EndTime,, • ]$INFO[Container(5580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-5">
		<value condition="Skin.String(widgetvalue-weather,7)" />
		<value condition="Skin.String(widgetvalue-weather,6)" />
		<value condition="Skin.String(widgetvalue-weather,5)" />
		<value condition="Skin.String(widgetvalue-weather,4)" />
		<value condition="Skin.String(widgetvalue-weather,3)" />
		<value condition="Skin.String(widgetvalue-weather,2)" />
		<value condition="Skin.String(widgetvalue-weather,1)" />
		<value>$LOCALIZE[8]</value>
	</variable>
	<variable name="8510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value>plugin://plugin.video.hubmaintenance/?url=url&amp;mode=9&amp;name=Maintenance&amp;iconimage=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Fmaintenance.jpg&amp;fanart=http%3A%2F%2Fxtyrepo.me%2Fxunitytalk%2Fmaintenance_do_not_touch%2Fhubmaintenance%2Fxunity_images%2Ffanart%2Fbeginners.jpg&amp;description=Safely+delete+all+cache+from+plugins&amp;special=&amp;reload=$INFO[Window(Home).Property(widgetreload)]</value>
	</variable>
	<variable name="widgetinfolabel-8510">
		<value condition="StringCompare(Container(8510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8510).ListItem.label] $INFO[Container(8510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Title) + SubString(Container(8510).ListItem.FolderPath, pvr://)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Season) + !IsEmpty(Container(8510).ListItem.Episode) + !StringCompare(Container(8510).ListItem.TvShowTitle,Container(8510).ListItem.Title)">[UPPERCASE]S$INFO[Container(8510).ListItem.Season]E$INFO[Container(8510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Title)">$INFO[Container(8510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Label)">$INFO[Container(8510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8510">
		<value condition="!IsEmpty(Container(8510).ListItem.TvShowTitle) + !IsEmpty(Container(8510).ListItem.Genre)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.TvShowTitle)">$INFO[Container(8510).ListItem.TvShowTitle,, • ]$INFO[Container(8510).ListItem.Premiered,, • ]$INFO[Container(8510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Year)">$INFO[Container(8510).ListItem.Year,, • ]$INFO[Container(8510).ListItem.Duration,,min. • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Artist) + !IsEmpty(Container(8510).ListItem.Album)">$INFO[Container(8510).ListItem.Artist,, • ]$INFO[Container(8510).ListItem.Album,, • ]$INFO[Container(8510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.Property(StartTime))">$INFO[Container(8510).ListItem.Property(ChannelName),, • ]$INFO[Container(8510).ListItem.Property(StartTime),, - ]$INFO[Container(8510).ListItem.Property(EndTime),, • ]$INFO[Container(8510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8510).ListItem.StartTime)">$INFO[Container(8510).ListItem.ChannelName,, • ]$INFO[Container(8510).ListItem.StartTime,, - ]$INFO[Container(8510).ListItem.EndTime,, • ]$INFO[Container(8510).ListItem.Genre]</value>
	</variable>
	<variable name="8520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8520">
		<value condition="StringCompare(Container(8520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8520).ListItem.label] $INFO[Container(8520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Title) + SubString(Container(8520).ListItem.FolderPath, pvr://)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Season) + !IsEmpty(Container(8520).ListItem.Episode) + !StringCompare(Container(8520).ListItem.TvShowTitle,Container(8520).ListItem.Title)">[UPPERCASE]S$INFO[Container(8520).ListItem.Season]E$INFO[Container(8520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Title)">$INFO[Container(8520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Label)">$INFO[Container(8520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8520">
		<value condition="!IsEmpty(Container(8520).ListItem.TvShowTitle) + !IsEmpty(Container(8520).ListItem.Genre)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.TvShowTitle)">$INFO[Container(8520).ListItem.TvShowTitle,, • ]$INFO[Container(8520).ListItem.Premiered,, • ]$INFO[Container(8520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Year)">$INFO[Container(8520).ListItem.Year,, • ]$INFO[Container(8520).ListItem.Duration,,min. • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Artist) + !IsEmpty(Container(8520).ListItem.Album)">$INFO[Container(8520).ListItem.Artist,, • ]$INFO[Container(8520).ListItem.Album,, • ]$INFO[Container(8520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.Property(StartTime))">$INFO[Container(8520).ListItem.Property(ChannelName),, • ]$INFO[Container(8520).ListItem.Property(StartTime),, - ]$INFO[Container(8520).ListItem.Property(EndTime),, • ]$INFO[Container(8520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8520).ListItem.StartTime)">$INFO[Container(8520).ListItem.ChannelName,, • ]$INFO[Container(8520).ListItem.StartTime,, - ]$INFO[Container(8520).ListItem.EndTime,, • ]$INFO[Container(8520).ListItem.Genre]</value>
	</variable>
	<variable name="8530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8530">
		<value condition="StringCompare(Container(8530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8530).ListItem.label] $INFO[Container(8530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Title) + SubString(Container(8530).ListItem.FolderPath, pvr://)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Season) + !IsEmpty(Container(8530).ListItem.Episode) + !StringCompare(Container(8530).ListItem.TvShowTitle,Container(8530).ListItem.Title)">[UPPERCASE]S$INFO[Container(8530).ListItem.Season]E$INFO[Container(8530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Title)">$INFO[Container(8530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Label)">$INFO[Container(8530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8530">
		<value condition="!IsEmpty(Container(8530).ListItem.TvShowTitle) + !IsEmpty(Container(8530).ListItem.Genre)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.TvShowTitle)">$INFO[Container(8530).ListItem.TvShowTitle,, • ]$INFO[Container(8530).ListItem.Premiered,, • ]$INFO[Container(8530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Year)">$INFO[Container(8530).ListItem.Year,, • ]$INFO[Container(8530).ListItem.Duration,,min. • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Artist) + !IsEmpty(Container(8530).ListItem.Album)">$INFO[Container(8530).ListItem.Artist,, • ]$INFO[Container(8530).ListItem.Album,, • ]$INFO[Container(8530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.Property(StartTime))">$INFO[Container(8530).ListItem.Property(ChannelName),, • ]$INFO[Container(8530).ListItem.Property(StartTime),, - ]$INFO[Container(8530).ListItem.Property(EndTime),, • ]$INFO[Container(8530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8530).ListItem.StartTime)">$INFO[Container(8530).ListItem.ChannelName,, • ]$INFO[Container(8530).ListItem.StartTime,, - ]$INFO[Container(8530).ListItem.EndTime,, • ]$INFO[Container(8530).ListItem.Genre]</value>
	</variable>
	<variable name="8540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8540">
		<value condition="StringCompare(Container(8540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8540).ListItem.label] $INFO[Container(8540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Title) + SubString(Container(8540).ListItem.FolderPath, pvr://)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Season) + !IsEmpty(Container(8540).ListItem.Episode) + !StringCompare(Container(8540).ListItem.TvShowTitle,Container(8540).ListItem.Title)">[UPPERCASE]S$INFO[Container(8540).ListItem.Season]E$INFO[Container(8540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Title)">$INFO[Container(8540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Label)">$INFO[Container(8540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8540">
		<value condition="!IsEmpty(Container(8540).ListItem.TvShowTitle) + !IsEmpty(Container(8540).ListItem.Genre)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.TvShowTitle)">$INFO[Container(8540).ListItem.TvShowTitle,, • ]$INFO[Container(8540).ListItem.Premiered,, • ]$INFO[Container(8540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Year)">$INFO[Container(8540).ListItem.Year,, • ]$INFO[Container(8540).ListItem.Duration,,min. • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Artist) + !IsEmpty(Container(8540).ListItem.Album)">$INFO[Container(8540).ListItem.Artist,, • ]$INFO[Container(8540).ListItem.Album,, • ]$INFO[Container(8540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.Property(StartTime))">$INFO[Container(8540).ListItem.Property(ChannelName),, • ]$INFO[Container(8540).ListItem.Property(StartTime),, - ]$INFO[Container(8540).ListItem.Property(EndTime),, • ]$INFO[Container(8540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8540).ListItem.StartTime)">$INFO[Container(8540).ListItem.ChannelName,, • ]$INFO[Container(8540).ListItem.StartTime,, - ]$INFO[Container(8540).ListItem.EndTime,, • ]$INFO[Container(8540).ListItem.Genre]</value>
	</variable>
	<variable name="8550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8550">
		<value condition="StringCompare(Container(8550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8550).ListItem.label] $INFO[Container(8550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Title) + SubString(Container(8550).ListItem.FolderPath, pvr://)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Season) + !IsEmpty(Container(8550).ListItem.Episode) + !StringCompare(Container(8550).ListItem.TvShowTitle,Container(8550).ListItem.Title)">[UPPERCASE]S$INFO[Container(8550).ListItem.Season]E$INFO[Container(8550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Title)">$INFO[Container(8550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Label)">$INFO[Container(8550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8550">
		<value condition="!IsEmpty(Container(8550).ListItem.TvShowTitle) + !IsEmpty(Container(8550).ListItem.Genre)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.TvShowTitle)">$INFO[Container(8550).ListItem.TvShowTitle,, • ]$INFO[Container(8550).ListItem.Premiered,, • ]$INFO[Container(8550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Year)">$INFO[Container(8550).ListItem.Year,, • ]$INFO[Container(8550).ListItem.Duration,,min. • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Artist) + !IsEmpty(Container(8550).ListItem.Album)">$INFO[Container(8550).ListItem.Artist,, • ]$INFO[Container(8550).ListItem.Album,, • ]$INFO[Container(8550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.Property(StartTime))">$INFO[Container(8550).ListItem.Property(ChannelName),, • ]$INFO[Container(8550).ListItem.Property(StartTime),, - ]$INFO[Container(8550).ListItem.Property(EndTime),, • ]$INFO[Container(8550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8550).ListItem.StartTime)">$INFO[Container(8550).ListItem.ChannelName,, • ]$INFO[Container(8550).ListItem.StartTime,, - ]$INFO[Container(8550).ListItem.EndTime,, • ]$INFO[Container(8550).ListItem.Genre]</value>
	</variable>
	<variable name="8560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8560">
		<value condition="StringCompare(Container(8560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8560).ListItem.label] $INFO[Container(8560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Title) + SubString(Container(8560).ListItem.FolderPath, pvr://)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Season) + !IsEmpty(Container(8560).ListItem.Episode) + !StringCompare(Container(8560).ListItem.TvShowTitle,Container(8560).ListItem.Title)">[UPPERCASE]S$INFO[Container(8560).ListItem.Season]E$INFO[Container(8560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Title)">$INFO[Container(8560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Label)">$INFO[Container(8560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8560">
		<value condition="!IsEmpty(Container(8560).ListItem.TvShowTitle) + !IsEmpty(Container(8560).ListItem.Genre)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.TvShowTitle)">$INFO[Container(8560).ListItem.TvShowTitle,, • ]$INFO[Container(8560).ListItem.Premiered,, • ]$INFO[Container(8560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Year)">$INFO[Container(8560).ListItem.Year,, • ]$INFO[Container(8560).ListItem.Duration,,min. • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Artist) + !IsEmpty(Container(8560).ListItem.Album)">$INFO[Container(8560).ListItem.Artist,, • ]$INFO[Container(8560).ListItem.Album,, • ]$INFO[Container(8560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.Property(StartTime))">$INFO[Container(8560).ListItem.Property(ChannelName),, • ]$INFO[Container(8560).ListItem.Property(StartTime),, - ]$INFO[Container(8560).ListItem.Property(EndTime),, • ]$INFO[Container(8560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8560).ListItem.StartTime)">$INFO[Container(8560).ListItem.ChannelName,, • ]$INFO[Container(8560).ListItem.StartTime,, - ]$INFO[Container(8560).ListItem.EndTime,, • ]$INFO[Container(8560).ListItem.Genre]</value>
	</variable>
	<variable name="8570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8570">
		<value condition="StringCompare(Container(8570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8570).ListItem.label] $INFO[Container(8570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Title) + SubString(Container(8570).ListItem.FolderPath, pvr://)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Season) + !IsEmpty(Container(8570).ListItem.Episode) + !StringCompare(Container(8570).ListItem.TvShowTitle,Container(8570).ListItem.Title)">[UPPERCASE]S$INFO[Container(8570).ListItem.Season]E$INFO[Container(8570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Title)">$INFO[Container(8570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Label)">$INFO[Container(8570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8570">
		<value condition="!IsEmpty(Container(8570).ListItem.TvShowTitle) + !IsEmpty(Container(8570).ListItem.Genre)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.TvShowTitle)">$INFO[Container(8570).ListItem.TvShowTitle,, • ]$INFO[Container(8570).ListItem.Premiered,, • ]$INFO[Container(8570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Year)">$INFO[Container(8570).ListItem.Year,, • ]$INFO[Container(8570).ListItem.Duration,,min. • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Artist) + !IsEmpty(Container(8570).ListItem.Album)">$INFO[Container(8570).ListItem.Artist,, • ]$INFO[Container(8570).ListItem.Album,, • ]$INFO[Container(8570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.Property(StartTime))">$INFO[Container(8570).ListItem.Property(ChannelName),, • ]$INFO[Container(8570).ListItem.Property(StartTime),, - ]$INFO[Container(8570).ListItem.Property(EndTime),, • ]$INFO[Container(8570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8570).ListItem.StartTime)">$INFO[Container(8570).ListItem.ChannelName,, • ]$INFO[Container(8570).ListItem.StartTime,, - ]$INFO[Container(8570).ListItem.EndTime,, • ]$INFO[Container(8570).ListItem.Genre]</value>
	</variable>
	<variable name="8580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-8580">
		<value condition="StringCompare(Container(8580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(8580).ListItem.label] $INFO[Container(8580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Title) + SubString(Container(8580).ListItem.FolderPath, pvr://)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Season) + !IsEmpty(Container(8580).ListItem.Episode) + !StringCompare(Container(8580).ListItem.TvShowTitle,Container(8580).ListItem.Title)">[UPPERCASE]S$INFO[Container(8580).ListItem.Season]E$INFO[Container(8580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(8580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Title)">$INFO[Container(8580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Label)">$INFO[Container(8580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-8580">
		<value condition="!IsEmpty(Container(8580).ListItem.TvShowTitle) + !IsEmpty(Container(8580).ListItem.Genre)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.TvShowTitle)">$INFO[Container(8580).ListItem.TvShowTitle,, • ]$INFO[Container(8580).ListItem.Premiered,, • ]$INFO[Container(8580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Year)">$INFO[Container(8580).ListItem.Year,, • ]$INFO[Container(8580).ListItem.Duration,,min. • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Artist) + !IsEmpty(Container(8580).ListItem.Album)">$INFO[Container(8580).ListItem.Artist,, • ]$INFO[Container(8580).ListItem.Album,, • ]$INFO[Container(8580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.Property(StartTime))">$INFO[Container(8580).ListItem.Property(ChannelName),, • ]$INFO[Container(8580).ListItem.Property(StartTime),, - ]$INFO[Container(8580).ListItem.Property(EndTime),, • ]$INFO[Container(8580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(8580).ListItem.StartTime)">$INFO[Container(8580).ListItem.ChannelName,, • ]$INFO[Container(8580).ListItem.StartTime,, - ]$INFO[Container(8580).ListItem.EndTime,, • ]$INFO[Container(8580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-8">
		<value condition="Skin.String(widgetvalue-eliminacache,7)" />
		<value condition="Skin.String(widgetvalue-eliminacache,6)" />
		<value condition="Skin.String(widgetvalue-eliminacache,5)" />
		<value condition="Skin.String(widgetvalue-eliminacache,4)" />
		<value condition="Skin.String(widgetvalue-eliminacache,3)" />
		<value condition="Skin.String(widgetvalue-eliminacache,2)" />
		<value condition="Skin.String(widgetvalue-eliminacache,1)" />
		<value>Cache</value>
	</variable>
	<variable name="10510-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10510">
		<value condition="StringCompare(Container(10510).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10510).ListItem.label] $INFO[Container(10510).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.Title) + SubString(Container(10510).ListItem.FolderPath, pvr://)">$INFO[Container(10510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.Season) + !IsEmpty(Container(10510).ListItem.Episode) + !StringCompare(Container(10510).ListItem.TvShowTitle,Container(10510).ListItem.Title)">[UPPERCASE]S$INFO[Container(10510).ListItem.Season]E$INFO[Container(10510).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.Title)">$INFO[Container(10510).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.Label)">$INFO[Container(10510).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10510">
		<value condition="!IsEmpty(Container(10510).ListItem.TvShowTitle) + !IsEmpty(Container(10510).ListItem.Genre)">$INFO[Container(10510).ListItem.TvShowTitle,, • ]$INFO[Container(10510).ListItem.Year,, • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.TvShowTitle)">$INFO[Container(10510).ListItem.TvShowTitle,, • ]$INFO[Container(10510).ListItem.Premiered,, • ]$INFO[Container(10510).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.Year)">$INFO[Container(10510).ListItem.Year,, • ]$INFO[Container(10510).ListItem.Duration,,min. • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.Artist) + !IsEmpty(Container(10510).ListItem.Album)">$INFO[Container(10510).ListItem.Artist,, • ]$INFO[Container(10510).ListItem.Album,, • ]$INFO[Container(10510).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.Property(StartTime))">$INFO[Container(10510).ListItem.Property(ChannelName),, • ]$INFO[Container(10510).ListItem.Property(StartTime),, - ]$INFO[Container(10510).ListItem.Property(EndTime),, • ]$INFO[Container(10510).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10510).ListItem.StartTime)">$INFO[Container(10510).ListItem.ChannelName,, • ]$INFO[Container(10510).ListItem.StartTime,, - ]$INFO[Container(10510).ListItem.EndTime,, • ]$INFO[Container(10510).ListItem.Genre]</value>
	</variable>
	<variable name="10520-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10520">
		<value condition="StringCompare(Container(10520).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10520).ListItem.label] $INFO[Container(10520).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.Title) + SubString(Container(10520).ListItem.FolderPath, pvr://)">$INFO[Container(10520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.Season) + !IsEmpty(Container(10520).ListItem.Episode) + !StringCompare(Container(10520).ListItem.TvShowTitle,Container(10520).ListItem.Title)">[UPPERCASE]S$INFO[Container(10520).ListItem.Season]E$INFO[Container(10520).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.Title)">$INFO[Container(10520).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.Label)">$INFO[Container(10520).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10520">
		<value condition="!IsEmpty(Container(10520).ListItem.TvShowTitle) + !IsEmpty(Container(10520).ListItem.Genre)">$INFO[Container(10520).ListItem.TvShowTitle,, • ]$INFO[Container(10520).ListItem.Year,, • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.TvShowTitle)">$INFO[Container(10520).ListItem.TvShowTitle,, • ]$INFO[Container(10520).ListItem.Premiered,, • ]$INFO[Container(10520).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.Year)">$INFO[Container(10520).ListItem.Year,, • ]$INFO[Container(10520).ListItem.Duration,,min. • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.Artist) + !IsEmpty(Container(10520).ListItem.Album)">$INFO[Container(10520).ListItem.Artist,, • ]$INFO[Container(10520).ListItem.Album,, • ]$INFO[Container(10520).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.Property(StartTime))">$INFO[Container(10520).ListItem.Property(ChannelName),, • ]$INFO[Container(10520).ListItem.Property(StartTime),, - ]$INFO[Container(10520).ListItem.Property(EndTime),, • ]$INFO[Container(10520).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10520).ListItem.StartTime)">$INFO[Container(10520).ListItem.ChannelName,, • ]$INFO[Container(10520).ListItem.StartTime,, - ]$INFO[Container(10520).ListItem.EndTime,, • ]$INFO[Container(10520).ListItem.Genre]</value>
	</variable>
	<variable name="10530-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10530">
		<value condition="StringCompare(Container(10530).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10530).ListItem.label] $INFO[Container(10530).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.Title) + SubString(Container(10530).ListItem.FolderPath, pvr://)">$INFO[Container(10530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.Season) + !IsEmpty(Container(10530).ListItem.Episode) + !StringCompare(Container(10530).ListItem.TvShowTitle,Container(10530).ListItem.Title)">[UPPERCASE]S$INFO[Container(10530).ListItem.Season]E$INFO[Container(10530).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.Title)">$INFO[Container(10530).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.Label)">$INFO[Container(10530).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10530">
		<value condition="!IsEmpty(Container(10530).ListItem.TvShowTitle) + !IsEmpty(Container(10530).ListItem.Genre)">$INFO[Container(10530).ListItem.TvShowTitle,, • ]$INFO[Container(10530).ListItem.Year,, • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.TvShowTitle)">$INFO[Container(10530).ListItem.TvShowTitle,, • ]$INFO[Container(10530).ListItem.Premiered,, • ]$INFO[Container(10530).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.Year)">$INFO[Container(10530).ListItem.Year,, • ]$INFO[Container(10530).ListItem.Duration,,min. • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.Artist) + !IsEmpty(Container(10530).ListItem.Album)">$INFO[Container(10530).ListItem.Artist,, • ]$INFO[Container(10530).ListItem.Album,, • ]$INFO[Container(10530).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.Property(StartTime))">$INFO[Container(10530).ListItem.Property(ChannelName),, • ]$INFO[Container(10530).ListItem.Property(StartTime),, - ]$INFO[Container(10530).ListItem.Property(EndTime),, • ]$INFO[Container(10530).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10530).ListItem.StartTime)">$INFO[Container(10530).ListItem.ChannelName,, • ]$INFO[Container(10530).ListItem.StartTime,, - ]$INFO[Container(10530).ListItem.EndTime,, • ]$INFO[Container(10530).ListItem.Genre]</value>
	</variable>
	<variable name="10540-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10540">
		<value condition="StringCompare(Container(10540).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10540).ListItem.label] $INFO[Container(10540).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.Title) + SubString(Container(10540).ListItem.FolderPath, pvr://)">$INFO[Container(10540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.Season) + !IsEmpty(Container(10540).ListItem.Episode) + !StringCompare(Container(10540).ListItem.TvShowTitle,Container(10540).ListItem.Title)">[UPPERCASE]S$INFO[Container(10540).ListItem.Season]E$INFO[Container(10540).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.Title)">$INFO[Container(10540).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.Label)">$INFO[Container(10540).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10540">
		<value condition="!IsEmpty(Container(10540).ListItem.TvShowTitle) + !IsEmpty(Container(10540).ListItem.Genre)">$INFO[Container(10540).ListItem.TvShowTitle,, • ]$INFO[Container(10540).ListItem.Year,, • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.TvShowTitle)">$INFO[Container(10540).ListItem.TvShowTitle,, • ]$INFO[Container(10540).ListItem.Premiered,, • ]$INFO[Container(10540).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.Year)">$INFO[Container(10540).ListItem.Year,, • ]$INFO[Container(10540).ListItem.Duration,,min. • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.Artist) + !IsEmpty(Container(10540).ListItem.Album)">$INFO[Container(10540).ListItem.Artist,, • ]$INFO[Container(10540).ListItem.Album,, • ]$INFO[Container(10540).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.Property(StartTime))">$INFO[Container(10540).ListItem.Property(ChannelName),, • ]$INFO[Container(10540).ListItem.Property(StartTime),, - ]$INFO[Container(10540).ListItem.Property(EndTime),, • ]$INFO[Container(10540).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10540).ListItem.StartTime)">$INFO[Container(10540).ListItem.ChannelName,, • ]$INFO[Container(10540).ListItem.StartTime,, - ]$INFO[Container(10540).ListItem.EndTime,, • ]$INFO[Container(10540).ListItem.Genre]</value>
	</variable>
	<variable name="10550-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10550">
		<value condition="StringCompare(Container(10550).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10550).ListItem.label] $INFO[Container(10550).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.Title) + SubString(Container(10550).ListItem.FolderPath, pvr://)">$INFO[Container(10550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.Season) + !IsEmpty(Container(10550).ListItem.Episode) + !StringCompare(Container(10550).ListItem.TvShowTitle,Container(10550).ListItem.Title)">[UPPERCASE]S$INFO[Container(10550).ListItem.Season]E$INFO[Container(10550).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.Title)">$INFO[Container(10550).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.Label)">$INFO[Container(10550).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10550">
		<value condition="!IsEmpty(Container(10550).ListItem.TvShowTitle) + !IsEmpty(Container(10550).ListItem.Genre)">$INFO[Container(10550).ListItem.TvShowTitle,, • ]$INFO[Container(10550).ListItem.Year,, • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.TvShowTitle)">$INFO[Container(10550).ListItem.TvShowTitle,, • ]$INFO[Container(10550).ListItem.Premiered,, • ]$INFO[Container(10550).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.Year)">$INFO[Container(10550).ListItem.Year,, • ]$INFO[Container(10550).ListItem.Duration,,min. • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.Artist) + !IsEmpty(Container(10550).ListItem.Album)">$INFO[Container(10550).ListItem.Artist,, • ]$INFO[Container(10550).ListItem.Album,, • ]$INFO[Container(10550).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.Property(StartTime))">$INFO[Container(10550).ListItem.Property(ChannelName),, • ]$INFO[Container(10550).ListItem.Property(StartTime),, - ]$INFO[Container(10550).ListItem.Property(EndTime),, • ]$INFO[Container(10550).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10550).ListItem.StartTime)">$INFO[Container(10550).ListItem.ChannelName,, • ]$INFO[Container(10550).ListItem.StartTime,, - ]$INFO[Container(10550).ListItem.EndTime,, • ]$INFO[Container(10550).ListItem.Genre]</value>
	</variable>
	<variable name="10560-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10560">
		<value condition="StringCompare(Container(10560).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10560).ListItem.label] $INFO[Container(10560).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.Title) + SubString(Container(10560).ListItem.FolderPath, pvr://)">$INFO[Container(10560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.Season) + !IsEmpty(Container(10560).ListItem.Episode) + !StringCompare(Container(10560).ListItem.TvShowTitle,Container(10560).ListItem.Title)">[UPPERCASE]S$INFO[Container(10560).ListItem.Season]E$INFO[Container(10560).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.Title)">$INFO[Container(10560).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.Label)">$INFO[Container(10560).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10560">
		<value condition="!IsEmpty(Container(10560).ListItem.TvShowTitle) + !IsEmpty(Container(10560).ListItem.Genre)">$INFO[Container(10560).ListItem.TvShowTitle,, • ]$INFO[Container(10560).ListItem.Year,, • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.TvShowTitle)">$INFO[Container(10560).ListItem.TvShowTitle,, • ]$INFO[Container(10560).ListItem.Premiered,, • ]$INFO[Container(10560).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.Year)">$INFO[Container(10560).ListItem.Year,, • ]$INFO[Container(10560).ListItem.Duration,,min. • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.Artist) + !IsEmpty(Container(10560).ListItem.Album)">$INFO[Container(10560).ListItem.Artist,, • ]$INFO[Container(10560).ListItem.Album,, • ]$INFO[Container(10560).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.Property(StartTime))">$INFO[Container(10560).ListItem.Property(ChannelName),, • ]$INFO[Container(10560).ListItem.Property(StartTime),, - ]$INFO[Container(10560).ListItem.Property(EndTime),, • ]$INFO[Container(10560).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10560).ListItem.StartTime)">$INFO[Container(10560).ListItem.ChannelName,, • ]$INFO[Container(10560).ListItem.StartTime,, - ]$INFO[Container(10560).ListItem.EndTime,, • ]$INFO[Container(10560).ListItem.Genre]</value>
	</variable>
	<variable name="10570-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10570">
		<value condition="StringCompare(Container(10570).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10570).ListItem.label] $INFO[Container(10570).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.Title) + SubString(Container(10570).ListItem.FolderPath, pvr://)">$INFO[Container(10570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.Season) + !IsEmpty(Container(10570).ListItem.Episode) + !StringCompare(Container(10570).ListItem.TvShowTitle,Container(10570).ListItem.Title)">[UPPERCASE]S$INFO[Container(10570).ListItem.Season]E$INFO[Container(10570).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.Title)">$INFO[Container(10570).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.Label)">$INFO[Container(10570).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10570">
		<value condition="!IsEmpty(Container(10570).ListItem.TvShowTitle) + !IsEmpty(Container(10570).ListItem.Genre)">$INFO[Container(10570).ListItem.TvShowTitle,, • ]$INFO[Container(10570).ListItem.Year,, • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.TvShowTitle)">$INFO[Container(10570).ListItem.TvShowTitle,, • ]$INFO[Container(10570).ListItem.Premiered,, • ]$INFO[Container(10570).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.Year)">$INFO[Container(10570).ListItem.Year,, • ]$INFO[Container(10570).ListItem.Duration,,min. • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.Artist) + !IsEmpty(Container(10570).ListItem.Album)">$INFO[Container(10570).ListItem.Artist,, • ]$INFO[Container(10570).ListItem.Album,, • ]$INFO[Container(10570).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.Property(StartTime))">$INFO[Container(10570).ListItem.Property(ChannelName),, • ]$INFO[Container(10570).ListItem.Property(StartTime),, - ]$INFO[Container(10570).ListItem.Property(EndTime),, • ]$INFO[Container(10570).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10570).ListItem.StartTime)">$INFO[Container(10570).ListItem.ChannelName,, • ]$INFO[Container(10570).ListItem.StartTime,, - ]$INFO[Container(10570).ListItem.EndTime,, • ]$INFO[Container(10570).ListItem.Genre]</value>
	</variable>
	<variable name="10580-refresh">
		<value condition="!IsEmpty(Window(Home).property(skinhelper-refreshvideowidgetsbusy))">special://skin/extras/emptywidget.xsp</value>
		<value condition="!IsEmpty(Window(Home).property(favwidgetrefresh))">special://skin/extras/emptywidget.xsp</value>
		<value condition="window.isactive(fullscreenvideo)">special://skin/extras/emptywidget.xsp</value>
		<value />
	</variable>
	<variable name="widgetinfolabel-10580">
		<value condition="StringCompare(Container(10580).ListItem.Property(DBTYPE), systeminfo)">$INFO[Container(10580).ListItem.label] $INFO[Container(10580).ListItem.label2]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.Title) + SubString(Container(10580).ListItem.FolderPath, pvr://)">$INFO[Container(10580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.Season) + !IsEmpty(Container(10580).ListItem.Episode) + !StringCompare(Container(10580).ListItem.TvShowTitle,Container(10580).ListItem.Title)">[UPPERCASE]S$INFO[Container(10580).ListItem.Season]E$INFO[Container(10580).ListItem.Episode]:[/UPPERCASE] $INFO[Container(10580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.Title)">$INFO[Container(10580).ListItem.Title]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.Label)">$INFO[Container(10580).ListItem.Label]</value>
	</variable>
	<variable name="widgetsubtitle-10580">
		<value condition="!IsEmpty(Container(10580).ListItem.TvShowTitle) + !IsEmpty(Container(10580).ListItem.Genre)">$INFO[Container(10580).ListItem.TvShowTitle,, • ]$INFO[Container(10580).ListItem.Year,, • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.TvShowTitle)">$INFO[Container(10580).ListItem.TvShowTitle,, • ]$INFO[Container(10580).ListItem.Premiered,, • ]$INFO[Container(10580).ListItem.Duration,,min.]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.Year)">$INFO[Container(10580).ListItem.Year,, • ]$INFO[Container(10580).ListItem.Duration,,min. • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.Artist) + !IsEmpty(Container(10580).ListItem.Album)">$INFO[Container(10580).ListItem.Artist,, • ]$INFO[Container(10580).ListItem.Album,, • ]$INFO[Container(10580).ListItem.Duration]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.Property(StartTime))">$INFO[Container(10580).ListItem.Property(ChannelName),, • ]$INFO[Container(10580).ListItem.Property(StartTime),, - ]$INFO[Container(10580).ListItem.Property(EndTime),, • ]$INFO[Container(10580).ListItem.Genre]</value>
		<value condition="!IsEmpty(Container(10580).ListItem.StartTime)">$INFO[Container(10580).ListItem.ChannelName,, • ]$INFO[Container(10580).ListItem.StartTime,, - ]$INFO[Container(10580).ListItem.EndTime,, • ]$INFO[Container(10580).ListItem.Genre]</value>
	</variable>
	<variable name="widgetlabel-10">
		<value condition="Skin.String(widgetvalue-settings,7)" />
		<value condition="Skin.String(widgetvalue-settings,6)" />
		<value condition="Skin.String(widgetvalue-settings,5)" />
		<value condition="Skin.String(widgetvalue-settings,4)" />
		<value condition="Skin.String(widgetvalue-settings,3)" />
		<value condition="Skin.String(widgetvalue-settings,2)" />
		<value condition="Skin.String(widgetvalue-settings,1)" />
		<value>$LOCALIZE[130]</value>
	</variable>
</includes>
